{
  "address": "0xA496EA21762c7Ee3470F2eF5d6Da81790Df0c76d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "deployers",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "addDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "addVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "name": "deleteDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentSafeModeState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getMileageRecords",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "mileage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.MileageRecord[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getOwnersRecords",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.OwnersRecord[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getVehicle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "licensePlate",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "mileage",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.Vehicle",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "name": "isDeployer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setSafeMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "updateMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd16fa1c178c8889d26f5a88ef7ed003e5284d3893cd8940a3d62719d803b0743",
  "receipt": {
    "to": null,
    "from": "0x7FbC35C78deDdD220b16b3fB6B844456B4D37F1c",
    "contractAddress": "0xA496EA21762c7Ee3470F2eF5d6Da81790Df0c76d",
    "transactionIndex": 6,
    "gasUsed": "1880168",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xda0070aa9c00f134f023c900e8b1e4ed8e7c6ab88d533d21b1c486b9c1606be6",
    "transactionHash": "0xd16fa1c178c8889d26f5a88ef7ed003e5284d3893cd8940a3d62719d803b0743",
    "logs": [],
    "blockNumber": 3130685,
    "cumulativeGasUsed": "2177722",
    "status": 1,
    "byzantium": true
  },
  "args": [
    []
  ],
  "numDeployments": 3,
  "solcInputHash": "a71138ec1ff1da1dd91da76178951401",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"deployers\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"addDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"addVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"deleteDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSafeModeState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getMileageRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.MileageRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getOwnersRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.OwnersRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getVehicle\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.Vehicle\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"isDeployer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"setSafeMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"updateMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nicolas Guarini, Lorenzo Ficazzola\",\"kind\":\"dev\",\"methods\":{\"addDeployer(address)\":{\"params\":{\"newDeployer\":\"The new deployer's address\"}},\"addVehicle(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The initial mileage of the vehicle\"}},\"changeOwner(string,address)\":{\"params\":{\"licensePlate\":\"The licence plate of the veichle\",\"newOwner\":\"The new owner of the vehicle\"}},\"constructor\":{\"params\":{\"deployers\":\"Initial deployers array\"}},\"deleteDeployer(address)\":{\"params\":{\"deployer\":\"The deployer's address which needs to be removed\"}},\"getCurrentSafeModeState()\":{\"returns\":{\"_0\":\"The current safe mode state\"}},\"getMileageRecords(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The mileage records of a vehicle\"}},\"getOwnersRecords(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The owners records of the vehicle\"}},\"getVehicle(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The searched vehicle struct\"}},\"isDeployer(address)\":{\"params\":{\"deployer\":\"The deployer's address which needs to be checked\"},\"returns\":{\"_0\":\"A boolean result\"}},\"setSafeMode(bool)\":{\"params\":{\"newState\":\"The new state of the safe mode\"}},\"updateMileage(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The new mileage of the vehicle\"}}},\"stateVariables\":{\"_vehicles\":{\"details\":\"Define mappings to keep track of vehicles, their mileage records, and owners.\"}},\"title\":\"MileChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeployer(address)\":{\"notice\":\"Function to add a new deployer to the deployers mapping\"},\"addVehicle(string,uint256)\":{\"notice\":\"Function to add a new vehicle\"},\"changeOwner(string,address)\":{\"notice\":\"Function to change the owner of a vehicle\"},\"constructor\":{\"notice\":\"Default constructor, does nothing apart passing the parameter to Owned's constructor\"},\"deleteDeployer(address)\":{\"notice\":\"Function to remove a deployer from the deployers mapping\"},\"getCurrentSafeModeState()\":{\"notice\":\"Function to check the current state of the contract\"},\"getMileageRecords(string)\":{\"notice\":\"Function to get the mileage records of a vehicle\"},\"getOwnersRecords(string)\":{\"notice\":\"Function to get the owners records of a vehicle\"},\"getVehicle(string)\":{\"notice\":\"Function to get the owner and the latest mileage of a vehicle\"},\"isDeployer(address)\":{\"notice\":\"Function to check if a given address is in the deployers mapping\"},\"setSafeMode(bool)\":{\"notice\":\"Function to change the state of the safe mode\"},\"updateMileage(string,uint256)\":{\"notice\":\"Function to update the mileage of the vehicle\"}},\"notice\":\"A contract for keeping track of mileage records for _vehicles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MileChain.sol\":\"MileChain\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MileChain.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./Owned.sol\\\";\\r\\n\\r\\n/**\\r\\n * A contract for keeping track of mileage records for _vehicles.\\r\\n * @title MileChain\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract MileChain is Owned {\\r\\n    /**\\r\\n     * @dev Define the Vehicle struct with licencePlate, owner and mileage\\r\\n     */\\r\\n    struct Vehicle {\\r\\n        string licensePlate;\\r\\n        address owner;\\r\\n        uint256 mileage;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define the MileageRecord struct with mileage and unix timestamp.\\r\\n     */\\r\\n    struct MileageRecord {\\r\\n        uint256 mileage;\\r\\n        uint256 timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define the OwnersRecord struct with owner address and unix timestamp.\\r\\n     */\\r\\n    struct OwnersRecord {\\r\\n        address owner;\\r\\n        uint256 timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define mappings to keep track of vehicles, their mileage records, and owners.\\r\\n     */\\r\\n    mapping(string => Vehicle) private _vehicles;\\r\\n    mapping(string => MileageRecord[]) private _mileageRecords;\\r\\n    mapping(string => OwnersRecord[]) private _ownersRecords;\\r\\n\\r\\n    /**\\r\\n     * Default constructor, does nothing apart passing the parameter to Owned's constructor\\r\\n     * @param deployers Initial deployers array\\r\\n     */\\r\\n    constructor(address[] memory deployers) Owned(deployers) {}\\r\\n\\r\\n    /**\\r\\n     * Function to add a new vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The initial mileage of the vehicle\\r\\n     */\\r\\n    function addVehicle(string memory licensePlate, uint256 mileage) public {\\r\\n        require(\\r\\n            _vehicles[licensePlate].owner == address(0),\\r\\n            \\\"Vehicle already exists\\\"\\r\\n        );\\r\\n        require(\\r\\n            !_safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons\\\"\\r\\n        );\\r\\n\\r\\n        _vehicles[licensePlate] = Vehicle(licensePlate, msg.sender, mileage);\\r\\n        _mileageRecords[licensePlate].push(\\r\\n            MileageRecord(mileage, block.timestamp)\\r\\n        );\\r\\n        _ownersRecords[licensePlate].push(\\r\\n            OwnersRecord(msg.sender, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to update the mileage of the vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The new mileage of the vehicle\\r\\n     */\\r\\n    function updateMileage(string memory licensePlate, uint256 mileage) public {\\r\\n        require(\\r\\n            _vehicles[licensePlate].owner == msg.sender,\\r\\n            \\\"You do not own this vehicle\\\"\\r\\n        );\\r\\n        require(\\r\\n            mileage > _vehicles[licensePlate].mileage,\\r\\n            \\\"New mileage must be greater than current mileage\\\"\\r\\n        );\\r\\n        require(\\r\\n            !_safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons\\\"\\r\\n        );\\r\\n\\r\\n        _vehicles[licensePlate].mileage = mileage;\\r\\n        _mileageRecords[licensePlate].push(\\r\\n            MileageRecord(mileage, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the owner of a vehicle\\r\\n     * @param licensePlate The licence plate of the veichle\\r\\n     * @param newOwner The new owner of the vehicle\\r\\n     */\\r\\n    function changeOwner(string memory licensePlate, address newOwner) public {\\r\\n        require(\\r\\n            _vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        require(\\r\\n            !_safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons\\\"\\r\\n        );\\r\\n\\r\\n        _vehicles[licensePlate].owner = newOwner;\\r\\n        _ownersRecords[licensePlate].push(\\r\\n            OwnersRecord(newOwner, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owner and the latest mileage of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The searched vehicle struct\\r\\n     */\\r\\n    function getVehicle(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (Vehicle memory) {\\r\\n        require(\\r\\n            _vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n\\r\\n        return _vehicles[licensePlate];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the mileage records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The mileage records of a vehicle\\r\\n     */\\r\\n    function getMileageRecords(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (MileageRecord[] memory) {\\r\\n        require(\\r\\n            _vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n\\r\\n        return _mileageRecords[licensePlate];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owners records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The owners records of the vehicle\\r\\n     */\\r\\n    function getOwnersRecords(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (OwnersRecord[] memory) {\\r\\n        require(\\r\\n            _vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n\\r\\n        return _ownersRecords[licensePlate];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8bf8f2259d5c26feb1f0896c0c7ab64d5a5abaea58d898e1d348b73c64c28755\",\"license\":\"GNU\"},\"contracts/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/**\\r\\n * A contract to manage contract ownership and safe mode\\r\\n * @title Owned\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract Owned {\\r\\n    /**\\r\\n     * @dev Define variables to keep track of deployers and safe mode\\r\\n     */\\r\\n    mapping(address => bool) internal _deployers;\\r\\n    bool internal _safeMode;\\r\\n\\r\\n    /**\\r\\n     * @dev Define modifier to grant access only to deployers\\r\\n     */\\r\\n    modifier onlyDeployers() {\\r\\n        require(\\r\\n            _deployers[msg.sender],\\r\\n            \\\"You have to be a deployer to do this.\\\"\\r\\n        );\\r\\n\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initialize contract variables\\r\\n     * @param deployers Initial deployers array\\r\\n     */\\r\\n    constructor(address[] memory deployers) {\\r\\n        _deployers[msg.sender] = true;\\r\\n\\r\\n        if (deployers.length > 0) {\\r\\n            for (uint i = 0; i < deployers.length; i++) {\\r\\n                _deployers[deployers[i]] = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _safeMode = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the state of the safe mode\\r\\n     * @param newState The new state of the safe mode\\r\\n     */\\r\\n    function setSafeMode(bool newState) public onlyDeployers {\\r\\n        _safeMode = newState;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to add a new deployer to the deployers mapping\\r\\n     * @param newDeployer The new deployer's address\\r\\n     */\\r\\n    function addDeployer(address newDeployer) public onlyDeployers {\\r\\n        require(\\r\\n            _deployers[newDeployer],\\r\\n            \\\"The specified address is already a deployer.\\\"\\r\\n        );\\r\\n\\r\\n        _deployers[newDeployer] = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to remove a deployer from the deployers mapping\\r\\n     * @param deployer The deployer's address which needs to be removed\\r\\n     */\\r\\n    function deleteDeployer(address deployer) public onlyDeployers {\\r\\n        require(\\r\\n            _deployers[deployer],\\r\\n            \\\"The specified address is not a deployer.\\\"\\r\\n        );\\r\\n\\r\\n        _deployers[deployer] = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to check if a given address is in the deployers mapping\\r\\n     * @param deployer The deployer's address which needs to be checked\\r\\n     * @return A boolean result\\r\\n     */\\r\\n    function isDeployer(address deployer) public view returns (bool) {\\r\\n        return _deployers[deployer];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to check the current state of the contract\\r\\n     * @return The current safe mode state\\r\\n     */\\r\\n    function getCurrentSafeModeState() public view returns (bool) {\\r\\n        return _safeMode;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x358d5a3c4e2a2779ceb7bc6ceacea74ab7642f0fe7989fc5967c88fd69956934\",\"license\":\"GNU\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063880f403911610071578063880f4039146101785780639893709214610194578063c71290cb146101b0578063ca902299146101cc578063d8f9d144146101e8578063e3303ad114610204576100a9565b8063047fd579146100ae57806344b7e5f2146100de57806350c358a4146100fa57806360fa31091461012a57806367517bca14610148575b600080fd5b6100c860048036038101906100c3919061137c565b610234565b6040516100d591906114ee565b60405180910390f35b6100f860048036038101906100f39190611548565b61040e565b005b610114600480360381019061010f91906115a1565b6104b6565b60405161012191906115dd565b60405180910390f35b61013261050b565b60405161013f91906115dd565b60405180910390f35b610162600480360381019061015d919061137c565b610522565b60405161016f91906116d6565b60405180910390f35b610192600480360381019061018d91906115a1565b610663565b005b6101ae60048036038101906101a991906115a1565b6107d3565b005b6101ca60048036038101906101c59190611724565b610943565b005b6101e660048036038101906101e19190611724565b610c37565b005b61020260048036038101906101fd9190611780565b610e35565b005b61021e6004803603810190610219919061137c565b61105e565b60405161022b91906118ba565b60405180910390f35b61023c6111eb565b600073ffffffffffffffffffffffffffffffffffffffff166002836040516102649190611918565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e39061198c565b60405180910390fd5b6002826040516102fc9190611918565b9081526020016040518091039020604051806060016040529081600082018054610325906119db565b80601f0160208091040260200160405190810160405280929190818152602001828054610351906119db565b801561039e5780601f106103735761010080835404028352916020019161039e565b820191906000526020600020905b81548152906001019060200180831161038157829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049090611a7e565b60405180910390fd5b80600160006101000a81548160ff02191690831515021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600160009054906101000a900460ff16905090565b6060600073ffffffffffffffffffffffffffffffffffffffff1660028360405161054c9190611918565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb9061198c565b60405180910390fd5b6003826040516105e49190611918565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561065857838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610612565b505050509050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e590611a7e565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077090611b10565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590611a7e565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e090611ba2565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff1660028360405161096b9190611918565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea90611c0e565b60405180910390fd5b600160009054906101000a900460ff1615610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611ca0565b60405180910390fd5b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600283604051610a849190611918565b90815260200160405180910390206000820151816000019081610aa79190611e6c565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600382604051610b0c9190611918565b9081526020016040518091039020604051806040016040528083815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050600482604051610b7e9190611918565b908152602001604051809103902060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b3373ffffffffffffffffffffffffffffffffffffffff16600283604051610c5e9190611918565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ce6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdd90611f8a565b60405180910390fd5b600282604051610cf69190611918565b9081526020016040518091039020600201548111610d49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d409061201c565b60405180910390fd5b600160009054906101000a900460ff1615610d99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9090611ca0565b60405180910390fd5b80600283604051610daa9190611918565b908152602001604051809103902060020181905550600382604051610dcf9190611918565b90815260200160405180910390206040518060400160405280838152602001428152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550505050565b600073ffffffffffffffffffffffffffffffffffffffff16600283604051610e5d9190611918565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ee5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edc9061198c565b60405180910390fd5b600160009054906101000a900460ff1615610f35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2c90611ca0565b60405180910390fd5b80600283604051610f469190611918565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600482604051610fa59190611918565b908152602001604051809103902060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6060600073ffffffffffffffffffffffffffffffffffffffff166002836040516110889190611918565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611110576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111079061198c565b60405180910390fd5b6004826040516111209190611918565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156111e057838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250508152602001906001019061114e565b505050509050919050565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61128982611240565b810181811067ffffffffffffffff821117156112a8576112a7611251565b5b80604052505050565b60006112bb611222565b90506112c78282611280565b919050565b600067ffffffffffffffff8211156112e7576112e6611251565b5b6112f082611240565b9050602081019050919050565b82818337600083830152505050565b600061131f61131a846112cc565b6112b1565b90508281526020810184848401111561133b5761133a61123b565b5b6113468482856112fd565b509392505050565b600082601f83011261136357611362611236565b5b813561137384826020860161130c565b91505092915050565b6000602082840312156113925761139161122c565b5b600082013567ffffffffffffffff8111156113b0576113af611231565b5b6113bc8482850161134e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113ff5780820151818401526020810190506113e4565b60008484015250505050565b6000611416826113c5565b61142081856113d0565b93506114308185602086016113e1565b61143981611240565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061146f82611444565b9050919050565b61147f81611464565b82525050565b6000819050919050565b61149881611485565b82525050565b600060608301600083015184820360008601526114bb828261140b565b91505060208301516114d06020860182611476565b5060408301516114e3604086018261148f565b508091505092915050565b60006020820190508181036000830152611508818461149e565b905092915050565b60008115159050919050565b61152581611510565b811461153057600080fd5b50565b6000813590506115428161151c565b92915050565b60006020828403121561155e5761155d61122c565b5b600061156c84828501611533565b91505092915050565b61157e81611464565b811461158957600080fd5b50565b60008135905061159b81611575565b92915050565b6000602082840312156115b7576115b661122c565b5b60006115c58482850161158c565b91505092915050565b6115d781611510565b82525050565b60006020820190506115f260008301846115ce565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60408201600082015161163a600085018261148f565b50602082015161164d602085018261148f565b50505050565b600061165f8383611624565b60408301905092915050565b6000602082019050919050565b6000611683826115f8565b61168d8185611603565b935061169883611614565b8060005b838110156116c95781516116b08882611653565b97506116bb8361166b565b92505060018101905061169c565b5085935050505092915050565b600060208201905081810360008301526116f08184611678565b905092915050565b61170181611485565b811461170c57600080fd5b50565b60008135905061171e816116f8565b92915050565b6000806040838503121561173b5761173a61122c565b5b600083013567ffffffffffffffff81111561175957611758611231565b5b6117658582860161134e565b92505060206117768582860161170f565b9150509250929050565b600080604083850312156117975761179661122c565b5b600083013567ffffffffffffffff8111156117b5576117b4611231565b5b6117c18582860161134e565b92505060206117d28582860161158c565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60408201600082015161181e6000850182611476565b506020820151611831602085018261148f565b50505050565b60006118438383611808565b60408301905092915050565b6000602082019050919050565b6000611867826117dc565b61187181856117e7565b935061187c836117f8565b8060005b838110156118ad5781516118948882611837565b975061189f8361184f565b925050600181019050611880565b5085935050505092915050565b600060208201905081810360008301526118d4818461185c565b905092915050565b600081905092915050565b60006118f2826113c5565b6118fc81856118dc565b935061190c8185602086016113e1565b80840191505092915050565b600061192482846118e7565b915081905092915050565b600082825260208201905092915050565b7f56656869636c65206e6f7420666f756e64000000000000000000000000000000600082015250565b600061197660118361192f565b915061198182611940565b602082019050919050565b600060208201905081810360008301526119a581611969565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119f357607f821691505b602082108103611a0657611a056119ac565b5b50919050565b7f596f75206861766520746f2062652061206465706c6f79657220746f20646f2060008201527f746869732e000000000000000000000000000000000000000000000000000000602082015250565b6000611a6860258361192f565b9150611a7382611a0c565b604082019050919050565b60006020820190508181036000830152611a9781611a5b565b9050919050565b7f54686520737065636966696564206164647265737320697320616c726561647960008201527f2061206465706c6f7965722e0000000000000000000000000000000000000000602082015250565b6000611afa602c8361192f565b9150611b0582611a9e565b604082019050919050565b60006020820190508181036000830152611b2981611aed565b9050919050565b7f546865207370656369666965642061646472657373206973206e6f742061206460008201527f65706c6f7965722e000000000000000000000000000000000000000000000000602082015250565b6000611b8c60288361192f565b9150611b9782611b30565b604082019050919050565b60006020820190508181036000830152611bbb81611b7f565b9050919050565b7f56656869636c6520616c72656164792065786973747300000000000000000000600082015250565b6000611bf860168361192f565b9150611c0382611bc2565b602082019050919050565b60006020820190508181036000830152611c2781611beb565b9050919050565b7f436f6e747261637420697320696e20726561642d6f6e6c79206d6f646520666f60008201527f7220736563757269747920726561736f6e730000000000000000000000000000602082015250565b6000611c8a60328361192f565b9150611c9582611c2e565b604082019050919050565b60006020820190508181036000830152611cb981611c7d565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d227fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ce5565b611d2c8683611ce5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d69611d64611d5f84611485565b611d44565b611485565b9050919050565b6000819050919050565b611d8383611d4e565b611d97611d8f82611d70565b848454611cf2565b825550505050565b600090565b611dac611d9f565b611db7818484611d7a565b505050565b5b81811015611ddb57611dd0600082611da4565b600181019050611dbd565b5050565b601f821115611e2057611df181611cc0565b611dfa84611cd5565b81016020851015611e09578190505b611e1d611e1585611cd5565b830182611dbc565b50505b505050565b600082821c905092915050565b6000611e4360001984600802611e25565b1980831691505092915050565b6000611e5c8383611e32565b9150826002028217905092915050565b611e75826113c5565b67ffffffffffffffff811115611e8e57611e8d611251565b5b611e9882546119db565b611ea3828285611ddf565b600060209050601f831160018114611ed65760008415611ec4578287015190505b611ece8582611e50565b865550611f36565b601f198416611ee486611cc0565b60005b82811015611f0c57848901518255600182019150602085019450602081019050611ee7565b86831015611f295784890151611f25601f891682611e32565b8355505b6001600288020188555050505b505050505050565b7f596f7520646f206e6f74206f776e20746869732076656869636c650000000000600082015250565b6000611f74601b8361192f565b9150611f7f82611f3e565b602082019050919050565b60006020820190508181036000830152611fa381611f67565b9050919050565b7f4e6577206d696c65616765206d7573742062652067726561746572207468616e60008201527f2063757272656e74206d696c6561676500000000000000000000000000000000602082015250565b600061200660308361192f565b915061201182611faa565b604082019050919050565b6000602082019050818103600083015261203581611ff9565b905091905056fea2646970667358221220d38d3e65735e812f5f1e4340a34e3cdc1d10c2e71a6d8c13f39100a6870935f364736f6c63430008120033",
  "devdoc": {
    "author": "Nicolas Guarini, Lorenzo Ficazzola",
    "kind": "dev",
    "methods": {
      "addDeployer(address)": {
        "params": {
          "newDeployer": "The new deployer's address"
        }
      },
      "addVehicle(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The initial mileage of the vehicle"
        }
      },
      "changeOwner(string,address)": {
        "params": {
          "licensePlate": "The licence plate of the veichle",
          "newOwner": "The new owner of the vehicle"
        }
      },
      "constructor": {
        "params": {
          "deployers": "Initial deployers array"
        }
      },
      "deleteDeployer(address)": {
        "params": {
          "deployer": "The deployer's address which needs to be removed"
        }
      },
      "getCurrentSafeModeState()": {
        "returns": {
          "_0": "The current safe mode state"
        }
      },
      "getMileageRecords(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The mileage records of a vehicle"
        }
      },
      "getOwnersRecords(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The owners records of the vehicle"
        }
      },
      "getVehicle(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The searched vehicle struct"
        }
      },
      "isDeployer(address)": {
        "params": {
          "deployer": "The deployer's address which needs to be checked"
        },
        "returns": {
          "_0": "A boolean result"
        }
      },
      "setSafeMode(bool)": {
        "params": {
          "newState": "The new state of the safe mode"
        }
      },
      "updateMileage(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The new mileage of the vehicle"
        }
      }
    },
    "stateVariables": {
      "_vehicles": {
        "details": "Define mappings to keep track of vehicles, their mileage records, and owners."
      }
    },
    "title": "MileChain",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addDeployer(address)": {
        "notice": "Function to add a new deployer to the deployers mapping"
      },
      "addVehicle(string,uint256)": {
        "notice": "Function to add a new vehicle"
      },
      "changeOwner(string,address)": {
        "notice": "Function to change the owner of a vehicle"
      },
      "constructor": {
        "notice": "Default constructor, does nothing apart passing the parameter to Owned's constructor"
      },
      "deleteDeployer(address)": {
        "notice": "Function to remove a deployer from the deployers mapping"
      },
      "getCurrentSafeModeState()": {
        "notice": "Function to check the current state of the contract"
      },
      "getMileageRecords(string)": {
        "notice": "Function to get the mileage records of a vehicle"
      },
      "getOwnersRecords(string)": {
        "notice": "Function to get the owners records of a vehicle"
      },
      "getVehicle(string)": {
        "notice": "Function to get the owner and the latest mileage of a vehicle"
      },
      "isDeployer(address)": {
        "notice": "Function to check if a given address is in the deployers mapping"
      },
      "setSafeMode(bool)": {
        "notice": "Function to change the state of the safe mode"
      },
      "updateMileage(string,uint256)": {
        "notice": "Function to update the mileage of the vehicle"
      }
    },
    "notice": "A contract for keeping track of mileage records for _vehicles.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 305,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_deployers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 307,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_safeMode",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 28,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_vehicles",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Vehicle)12_storage)"
      },
      {
        "astId": 34,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_mileageRecords",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(MileageRecord)17_storage)dyn_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_ownersRecords",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(OwnersRecord)22_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(MileageRecord)17_storage)dyn_storage": {
        "base": "t_struct(MileageRecord)17_storage",
        "encoding": "dynamic_array",
        "label": "struct MileChain.MileageRecord[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(OwnersRecord)22_storage)dyn_storage": {
        "base": "t_struct(OwnersRecord)22_storage",
        "encoding": "dynamic_array",
        "label": "struct MileChain.OwnersRecord[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(MileageRecord)17_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.MileageRecord[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(MileageRecord)17_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(OwnersRecord)22_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.OwnersRecord[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(OwnersRecord)22_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Vehicle)12_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.Vehicle)",
        "numberOfBytes": "32",
        "value": "t_struct(Vehicle)12_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(MileageRecord)17_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.MileageRecord",
        "members": [
          {
            "astId": 14,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "mileage",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 16,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(OwnersRecord)22_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.OwnersRecord",
        "members": [
          {
            "astId": 19,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 21,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Vehicle)12_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.Vehicle",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "licensePlate",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 11,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "mileage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}