{
  "address": "0x6Da3D07a6BF01F02fB41c02984a49B5d9Aa6ea92",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "deployers",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyADeployer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMileage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotADeployer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeModeEnabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VehicleAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VehicleNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VehicleOfAnotherOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "addDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "addVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "name": "deleteDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentSafeModeState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getMileageRecords",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "mileage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.MileageRecord[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getOwnersRecords",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.OwnersRecord[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getVehicle",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "licensePlate",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "mileage",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.Vehicle",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "name": "isDeployer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setSafeMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "updateMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x693916278113b8bac18fb125e1a40c1a16e0230d634656db541e9ec24b4c88e8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x6Da3D07a6BF01F02fB41c02984a49B5d9Aa6ea92",
    "transactionIndex": 0,
    "gasUsed": "1698114",
    "logsBloom": "0x
    "blockHash": "0xb6225f3afffc7cfa7c336a103be379daac77704a8d17e0de75b733cbded661ec",
    "transactionHash": "0x693916278113b8bac18fb125e1a40c1a16e0230d634656db541e9ec24b4c88e8",
    "logs": [],
    "blockNumber": 537,
    "cumulativeGasUsed": "1698114",
    "status": 1,
    "byzantium": true
  },
  "args": [
    []
  ],
  "numDeployments": 1,
  "solcInputHash": "992eb00fd495f5ba0510236770f30458",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"deployers\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyADeployer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMileage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotADeployer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeModeEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VehicleAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VehicleNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VehicleOfAnotherOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"addDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"addVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"deleteDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSafeModeState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getMileageRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.MileageRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getOwnersRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.OwnersRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getVehicle\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.Vehicle\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"isDeployer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"setSafeMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"updateMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nicolas Guarini, Lorenzo Ficazzola\",\"kind\":\"dev\",\"methods\":{\"addDeployer(address)\":{\"params\":{\"newDeployer\":\"The new deployer's address\"}},\"addVehicle(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The initial mileage of the vehicle\"}},\"changeOwner(string,address)\":{\"params\":{\"licensePlate\":\"The licence plate of the veichle\",\"newOwner\":\"The new owner of the vehicle\"}},\"constructor\":{\"params\":{\"deployers\":\"Initial deployers array\"}},\"deleteDeployer(address)\":{\"params\":{\"deployer\":\"The deployer's address which needs to be removed\"}},\"getCurrentSafeModeState()\":{\"returns\":{\"_0\":\"The current safe mode state\"}},\"getMileageRecords(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The mileage records of a vehicle\"}},\"getOwnersRecords(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The owners records of the vehicle\"}},\"getVehicle(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The searched vehicle struct\"}},\"isDeployer(address)\":{\"params\":{\"deployer\":\"The deployer's address which needs to be checked\"},\"returns\":{\"_0\":\"A boolean result\"}},\"setSafeMode(bool)\":{\"params\":{\"newState\":\"The new state of the safe mode\"}},\"updateMileage(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The new mileage of the vehicle\"}}},\"stateVariables\":{\"_vehicles\":{\"details\":\"Define mappings to keep track of vehicles, their mileage records, and owners.\"}},\"title\":\"MileChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeployer(address)\":{\"notice\":\"Function to add a new deployer to the deployers mapping\"},\"addVehicle(string,uint256)\":{\"notice\":\"Function to add a new vehicle\"},\"changeOwner(string,address)\":{\"notice\":\"Function to change the owner of a vehicle\"},\"constructor\":{\"notice\":\"Default constructor, does nothing apart passing the parameter to Owned's constructor\"},\"deleteDeployer(address)\":{\"notice\":\"Function to remove a deployer from the deployers mapping\"},\"getCurrentSafeModeState()\":{\"notice\":\"Function to check the current state of the contract\"},\"getMileageRecords(string)\":{\"notice\":\"Function to get the mileage records of a vehicle\"},\"getOwnersRecords(string)\":{\"notice\":\"Function to get the owners records of a vehicle\"},\"getVehicle(string)\":{\"notice\":\"Function to get the owner and the latest mileage of a vehicle\"},\"isDeployer(address)\":{\"notice\":\"Function to check if a given address is in the deployers mapping\"},\"setSafeMode(bool)\":{\"notice\":\"Function to change the state of the safe mode\"},\"updateMileage(string,uint256)\":{\"notice\":\"Function to update the mileage of the vehicle\"}},\"notice\":\"A contract for keeping track of mileage records for _vehicles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MileChain.sol\":\"MileChain\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MileChain.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./Owned.sol\\\";\\r\\n\\r\\n/* Errors */\\r\\nerror VehicleAlreadyExists();\\r\\nerror SafeModeEnabled();\\r\\nerror VehicleNotFound();\\r\\nerror VehicleOfAnotherOwner();\\r\\nerror InvalidMileage();\\r\\n\\r\\n/**\\r\\n * A contract for keeping track of mileage records for _vehicles.\\r\\n * @title MileChain\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract MileChain is Owned {\\r\\n    /**\\r\\n     * @dev Define the Vehicle struct with licencePlate, owner and mileage\\r\\n     */\\r\\n    struct Vehicle {\\r\\n        string licensePlate;\\r\\n        address owner;\\r\\n        uint256 mileage;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define the MileageRecord struct with mileage and unix timestamp.\\r\\n     */\\r\\n    struct MileageRecord {\\r\\n        uint256 mileage;\\r\\n        uint256 timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define the OwnersRecord struct with owner address and unix timestamp.\\r\\n     */\\r\\n    struct OwnersRecord {\\r\\n        address owner;\\r\\n        uint256 timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define mappings to keep track of vehicles, their mileage records, and owners.\\r\\n     */\\r\\n    mapping(string => Vehicle) private _vehicles;\\r\\n    mapping(string => MileageRecord[]) private _mileageRecords;\\r\\n    mapping(string => OwnersRecord[]) private _ownersRecords;\\r\\n\\r\\n    /**\\r\\n     * Default constructor, does nothing apart passing the parameter to Owned's constructor\\r\\n     * @param deployers Initial deployers array\\r\\n     */\\r\\n    constructor(address[] memory deployers) Owned(deployers) {}\\r\\n\\r\\n    /**\\r\\n     * Function to add a new vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The initial mileage of the vehicle\\r\\n     */\\r\\n    function addVehicle(string memory licensePlate, uint256 mileage) public {\\r\\n        if (_vehicles[licensePlate].owner != address(0)) {\\r\\n            revert VehicleAlreadyExists();\\r\\n        }\\r\\n        if (_safeMode) {\\r\\n            revert SafeModeEnabled();\\r\\n        }\\r\\n\\r\\n        _vehicles[licensePlate] = Vehicle(licensePlate, msg.sender, mileage);\\r\\n        _mileageRecords[licensePlate].push(\\r\\n            MileageRecord(mileage, block.timestamp)\\r\\n        );\\r\\n        _ownersRecords[licensePlate].push(\\r\\n            OwnersRecord(msg.sender, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to update the mileage of the vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The new mileage of the vehicle\\r\\n     */\\r\\n    function updateMileage(string memory licensePlate, uint256 mileage) public {\\r\\n        if (_vehicles[licensePlate].owner == address(0)) {\\r\\n            revert VehicleNotFound();\\r\\n        }\\r\\n        if (_vehicles[licensePlate].owner != msg.sender) {\\r\\n            revert VehicleOfAnotherOwner();\\r\\n        }\\r\\n        if (mileage <= _vehicles[licensePlate].mileage) {\\r\\n            revert InvalidMileage();\\r\\n        }\\r\\n        if (_safeMode) {\\r\\n            revert SafeModeEnabled();\\r\\n        }\\r\\n\\r\\n        _vehicles[licensePlate].mileage = mileage;\\r\\n        _mileageRecords[licensePlate].push(\\r\\n            MileageRecord(mileage, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the owner of a vehicle\\r\\n     * @param licensePlate The licence plate of the veichle\\r\\n     * @param newOwner The new owner of the vehicle\\r\\n     */\\r\\n    function changeOwner(string memory licensePlate, address newOwner) public {\\r\\n        if (_vehicles[licensePlate].owner == address(0)) {\\r\\n            revert VehicleNotFound();\\r\\n        }\\r\\n        if (_vehicles[licensePlate].owner != msg.sender) {\\r\\n            revert VehicleOfAnotherOwner();\\r\\n        }\\r\\n        if (_safeMode) {\\r\\n            revert SafeModeEnabled();\\r\\n        }\\r\\n\\r\\n        _vehicles[licensePlate].owner = newOwner;\\r\\n        _ownersRecords[licensePlate].push(\\r\\n            OwnersRecord(newOwner, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owner and the latest mileage of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The searched vehicle struct\\r\\n     */\\r\\n    function getVehicle(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (Vehicle memory) {\\r\\n        if (_vehicles[licensePlate].owner == address(0)) {\\r\\n            revert VehicleNotFound();\\r\\n        }\\r\\n\\r\\n        return _vehicles[licensePlate];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the mileage records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The mileage records of a vehicle\\r\\n     */\\r\\n    function getMileageRecords(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (MileageRecord[] memory) {\\r\\n        if (_vehicles[licensePlate].owner == address(0)) {\\r\\n            revert VehicleNotFound();\\r\\n        }\\r\\n\\r\\n        return _mileageRecords[licensePlate];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owners records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The owners records of the vehicle\\r\\n     */\\r\\n    function getOwnersRecords(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (OwnersRecord[] memory) {\\r\\n        if (_vehicles[licensePlate].owner == address(0)) {\\r\\n            revert VehicleNotFound();\\r\\n        }\\r\\n\\r\\n        return _ownersRecords[licensePlate];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4c85e40034dd7caf510ef6974c4d1cf2d9b76bd03addff2d55e3234caa4b15f2\",\"license\":\"GNU\"},\"contracts/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/* Errors */\\r\\nerror Unauthorized();\\r\\nerror NotADeployer();\\r\\nerror AlreadyADeployer();\\r\\n\\r\\n/**\\r\\n * A contract to manage contract ownership and safe mode\\r\\n * @title Owned\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract Owned {\\r\\n    /**\\r\\n     * @dev Define variables to keep track of deployers and safe mode\\r\\n     */\\r\\n    mapping(address => bool) internal _deployers;\\r\\n    bool internal _safeMode;\\r\\n\\r\\n    /**\\r\\n     * @dev Define modifier to grant access only to deployers\\r\\n     */\\r\\n    modifier onlyDeployers() {\\r\\n        if (_deployers[msg.sender] != true) {\\r\\n            revert Unauthorized();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initialize contract variables\\r\\n     * @param deployers Initial deployers array\\r\\n     */\\r\\n    constructor(address[] memory deployers) {\\r\\n        _deployers[msg.sender] = true;\\r\\n\\r\\n        for (uint i = 0; i < deployers.length; i++) {\\r\\n            _deployers[deployers[i]] = true;\\r\\n        }\\r\\n\\r\\n        _safeMode = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the state of the safe mode\\r\\n     * @param newState The new state of the safe mode\\r\\n     */\\r\\n    function setSafeMode(bool newState) public onlyDeployers {\\r\\n        _safeMode = newState;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to add a new deployer to the deployers mapping\\r\\n     * @param newDeployer The new deployer's address\\r\\n     */\\r\\n    function addDeployer(address newDeployer) public onlyDeployers {\\r\\n        if (_deployers[newDeployer]) {\\r\\n            revert AlreadyADeployer();\\r\\n        }\\r\\n\\r\\n        _deployers[newDeployer] = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to remove a deployer from the deployers mapping\\r\\n     * @param deployer The deployer's address which needs to be removed\\r\\n     */\\r\\n    function deleteDeployer(address deployer) public onlyDeployers {\\r\\n        if (_deployers[deployer] != true) {\\r\\n            revert NotADeployer();\\r\\n        }\\r\\n\\r\\n        _deployers[deployer] = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to check if a given address is in the deployers mapping\\r\\n     * @param deployer The deployer's address which needs to be checked\\r\\n     * @return A boolean result\\r\\n     */\\r\\n    function isDeployer(address deployer) public view returns (bool) {\\r\\n        return _deployers[deployer];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to check the current state of the contract\\r\\n     * @return The current safe mode state\\r\\n     */\\r\\n    function getCurrentSafeModeState() public view returns (bool) {\\r\\n        return _safeMode;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa0f5649f7599270aa93beb3f2fcbbff8ecdf9511eefb4588510a088ff2d83427\",\"license\":\"GNU\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063880f403911610071578063880f4039146101785780639893709214610194578063c71290cb146101b0578063ca902299146101cc578063d8f9d144146101e8578063e3303ad114610204576100a9565b8063047fd579146100ae57806344b7e5f2146100de57806350c358a4146100fa57806360fa31091461012a57806367517bca14610148575b600080fd5b6100c860048036038101906100c3919061145f565b610234565b6040516100d591906115d1565b60405180910390f35b6100f860048036038101906100f3919061162b565b610405565b005b610114600480360381019061010f9190611684565b6104ab565b60405161012191906116c0565b60405180910390f35b610132610500565b60405161013f91906116c0565b60405180910390f35b610162600480360381019061015d919061145f565b610517565b60405161016f91906117b9565b60405180910390f35b610192600480360381019061018d9190611684565b61064f565b005b6101ae60048036038101906101a99190611684565b6107b5565b005b6101ca60048036038101906101c59190611807565b610921565b005b6101e660048036038101906101e19190611807565b610c03565b005b61020260048036038101906101fd9190611863565b610e8d565b005b61021e6004803603810190610219919061145f565b61114a565b60405161022b919061199d565b60405180910390f35b61023c6112ce565b600073ffffffffffffffffffffffffffffffffffffffff1660028360405161026491906119fb565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102e3576040517f68f2495100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826040516102f391906119fb565b908152602001604051809103902060405180606001604052908160008201805461031c90611a41565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611a41565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509050919050565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461048e576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548160ff02191690831515021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600160009054906101000a900460ff16905090565b6060600073ffffffffffffffffffffffffffffffffffffffff1660028360405161054191906119fb565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105c0576040517f68f2495100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003826040516105d091906119fb565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610644578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906105fe565b505050509050919050565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146106d8576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561075b576040517f9406159d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461083e576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600115156000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146108c7576040517fe4f7f9ac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff1660028360405161094991906119fb565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109c8576040517fabecbca900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900460ff1615610a0f576040517f3328bda300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600283604051610a5091906119fb565b90815260200160405180910390206000820151816000019081610a739190611c1e565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600382604051610ad891906119fb565b9081526020016040518091039020604051806040016040528083815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050600482604051610b4a91906119fb565b908152602001604051809103902060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600073ffffffffffffffffffffffffffffffffffffffff16600283604051610c2b91906119fb565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610caa576040517f68f2495100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600283604051610cd191906119fb565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d50576040517f5128efe000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600282604051610d6091906119fb565b9081526020016040518091039020600201548111610daa576040517ff8e9999200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900460ff1615610df1576040517f3328bda300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600283604051610e0291906119fb565b908152602001604051809103902060020181905550600382604051610e2791906119fb565b90815260200160405180910390206040518060400160405280838152602001428152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550505050565b600073ffffffffffffffffffffffffffffffffffffffff16600283604051610eb591906119fb565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f34576040517f68f2495100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600283604051610f5b91906119fb565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fda576040517f5128efe000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900460ff1615611021576040517f3328bda300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060028360405161103291906119fb565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048260405161109191906119fb565b908152602001604051809103902060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6060600073ffffffffffffffffffffffffffffffffffffffff1660028360405161117491906119fb565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111f3576040517f68f2495100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048260405161120391906119fb565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156112c357838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190611231565b505050509050919050565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61136c82611323565b810181811067ffffffffffffffff8211171561138b5761138a611334565b5b80604052505050565b600061139e611305565b90506113aa8282611363565b919050565b600067ffffffffffffffff8211156113ca576113c9611334565b5b6113d382611323565b9050602081019050919050565b82818337600083830152505050565b60006114026113fd846113af565b611394565b90508281526020810184848401111561141e5761141d61131e565b5b6114298482856113e0565b509392505050565b600082601f83011261144657611445611319565b5b81356114568482602086016113ef565b91505092915050565b6000602082840312156114755761147461130f565b5b600082013567ffffffffffffffff81111561149357611492611314565b5b61149f84828501611431565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114e25780820151818401526020810190506114c7565b60008484015250505050565b60006114f9826114a8565b61150381856114b3565b93506115138185602086016114c4565b61151c81611323565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061155282611527565b9050919050565b61156281611547565b82525050565b6000819050919050565b61157b81611568565b82525050565b6000606083016000830151848203600086015261159e82826114ee565b91505060208301516115b36020860182611559565b5060408301516115c66040860182611572565b508091505092915050565b600060208201905081810360008301526115eb8184611581565b905092915050565b60008115159050919050565b611608816115f3565b811461161357600080fd5b50565b600081359050611625816115ff565b92915050565b6000602082840312156116415761164061130f565b5b600061164f84828501611616565b91505092915050565b61166181611547565b811461166c57600080fd5b50565b60008135905061167e81611658565b92915050565b60006020828403121561169a5761169961130f565b5b60006116a88482850161166f565b91505092915050565b6116ba816115f3565b82525050565b60006020820190506116d560008301846116b1565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60408201600082015161171d6000850182611572565b5060208201516117306020850182611572565b50505050565b60006117428383611707565b60408301905092915050565b6000602082019050919050565b6000611766826116db565b61177081856116e6565b935061177b836116f7565b8060005b838110156117ac5781516117938882611736565b975061179e8361174e565b92505060018101905061177f565b5085935050505092915050565b600060208201905081810360008301526117d3818461175b565b905092915050565b6117e481611568565b81146117ef57600080fd5b50565b600081359050611801816117db565b92915050565b6000806040838503121561181e5761181d61130f565b5b600083013567ffffffffffffffff81111561183c5761183b611314565b5b61184885828601611431565b9250506020611859858286016117f2565b9150509250929050565b6000806040838503121561187a5761187961130f565b5b600083013567ffffffffffffffff81111561189857611897611314565b5b6118a485828601611431565b92505060206118b58582860161166f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6040820160008201516119016000850182611559565b5060208201516119146020850182611572565b50505050565b600061192683836118eb565b60408301905092915050565b6000602082019050919050565b600061194a826118bf565b61195481856118ca565b935061195f836118db565b8060005b83811015611990578151611977888261191a565b975061198283611932565b925050600181019050611963565b5085935050505092915050565b600060208201905081810360008301526119b7818461193f565b905092915050565b600081905092915050565b60006119d5826114a8565b6119df81856119bf565b93506119ef8185602086016114c4565b80840191505092915050565b6000611a0782846119ca565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a5957607f821691505b602082108103611a6c57611a6b611a12565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ad47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a97565b611ade8683611a97565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611b1b611b16611b1184611568565b611af6565b611568565b9050919050565b6000819050919050565b611b3583611b00565b611b49611b4182611b22565b848454611aa4565b825550505050565b600090565b611b5e611b51565b611b69818484611b2c565b505050565b5b81811015611b8d57611b82600082611b56565b600181019050611b6f565b5050565b601f821115611bd257611ba381611a72565b611bac84611a87565b81016020851015611bbb578190505b611bcf611bc785611a87565b830182611b6e565b50505b505050565b600082821c905092915050565b6000611bf560001984600802611bd7565b1980831691505092915050565b6000611c0e8383611be4565b9150826002028217905092915050565b611c27826114a8565b67ffffffffffffffff811115611c4057611c3f611334565b5b611c4a8254611a41565b611c55828285611b91565b600060209050601f831160018114611c885760008415611c76578287015190505b611c808582611c02565b865550611ce8565b601f198416611c9686611a72565b60005b82811015611cbe57848901518255600182019150602085019450602081019050611c99565b86831015611cdb5784890151611cd7601f891682611be4565b8355505b6001600288020188555050505b50505050505056fea264697066735822122023cc0c7cf6230c1972dc6cfdf7fa3f2d521f323675540d98c3567fb099e02a6864736f6c63430008120033",
  "devdoc": {
    "author": "Nicolas Guarini, Lorenzo Ficazzola",
    "kind": "dev",
    "methods": {
      "addDeployer(address)": {
        "params": {
          "newDeployer": "The new deployer's address"
        }
      },
      "addVehicle(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The initial mileage of the vehicle"
        }
      },
      "changeOwner(string,address)": {
        "params": {
          "licensePlate": "The licence plate of the veichle",
          "newOwner": "The new owner of the vehicle"
        }
      },
      "constructor": {
        "params": {
          "deployers": "Initial deployers array"
        }
      },
      "deleteDeployer(address)": {
        "params": {
          "deployer": "The deployer's address which needs to be removed"
        }
      },
      "getCurrentSafeModeState()": {
        "returns": {
          "_0": "The current safe mode state"
        }
      },
      "getMileageRecords(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The mileage records of a vehicle"
        }
      },
      "getOwnersRecords(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The owners records of the vehicle"
        }
      },
      "getVehicle(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The searched vehicle struct"
        }
      },
      "isDeployer(address)": {
        "params": {
          "deployer": "The deployer's address which needs to be checked"
        },
        "returns": {
          "_0": "A boolean result"
        }
      },
      "setSafeMode(bool)": {
        "params": {
          "newState": "The new state of the safe mode"
        }
      },
      "updateMileage(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The new mileage of the vehicle"
        }
      }
    },
    "stateVariables": {
      "_vehicles": {
        "details": "Define mappings to keep track of vehicles, their mileage records, and owners."
      }
    },
    "title": "MileChain",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addDeployer(address)": {
        "notice": "Function to add a new deployer to the deployers mapping"
      },
      "addVehicle(string,uint256)": {
        "notice": "Function to add a new vehicle"
      },
      "changeOwner(string,address)": {
        "notice": "Function to change the owner of a vehicle"
      },
      "constructor": {
        "notice": "Default constructor, does nothing apart passing the parameter to Owned's constructor"
      },
      "deleteDeployer(address)": {
        "notice": "Function to remove a deployer from the deployers mapping"
      },
      "getCurrentSafeModeState()": {
        "notice": "Function to check the current state of the contract"
      },
      "getMileageRecords(string)": {
        "notice": "Function to get the mileage records of a vehicle"
      },
      "getOwnersRecords(string)": {
        "notice": "Function to get the owners records of a vehicle"
      },
      "getVehicle(string)": {
        "notice": "Function to get the owner and the latest mileage of a vehicle"
      },
      "isDeployer(address)": {
        "notice": "Function to check if a given address is in the deployers mapping"
      },
      "setSafeMode(bool)": {
        "notice": "Function to change the state of the safe mode"
      },
      "updateMileage(string,uint256)": {
        "notice": "Function to update the mileage of the vehicle"
      }
    },
    "notice": "A contract for keeping track of mileage records for _vehicles.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 354,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_deployers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 356,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_safeMode",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 38,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_vehicles",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Vehicle)22_storage)"
      },
      {
        "astId": 44,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_mileageRecords",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(MileageRecord)27_storage)dyn_storage)"
      },
      {
        "astId": 50,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "_ownersRecords",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(OwnersRecord)32_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(MileageRecord)27_storage)dyn_storage": {
        "base": "t_struct(MileageRecord)27_storage",
        "encoding": "dynamic_array",
        "label": "struct MileChain.MileageRecord[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(OwnersRecord)32_storage)dyn_storage": {
        "base": "t_struct(OwnersRecord)32_storage",
        "encoding": "dynamic_array",
        "label": "struct MileChain.OwnersRecord[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(MileageRecord)27_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.MileageRecord[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(MileageRecord)27_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(OwnersRecord)32_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.OwnersRecord[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(OwnersRecord)32_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Vehicle)22_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.Vehicle)",
        "numberOfBytes": "32",
        "value": "t_struct(Vehicle)22_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(MileageRecord)27_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.MileageRecord",
        "members": [
          {
            "astId": 24,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "mileage",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 26,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(OwnersRecord)32_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.OwnersRecord",
        "members": [
          {
            "astId": 29,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 31,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Vehicle)22_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.Vehicle",
        "members": [
          {
            "astId": 17,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "licensePlate",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 21,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "mileage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}