{
  "address": "0xB5C1c502DAE2d821667C6016b0A67Cf07D16820E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "addVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getMileageRecord",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getOwnersRecords",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getVehicleByLicencePlate",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setSafeMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "transferDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "updateMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa873173337a2c47bbbe38d6cb9a952617839470feec22ac831279abae8f22234",
  "receipt": {
    "to": null,
    "from": "0x4FAC57Cd578DeD51DAb8c4827a8822266E1Bbde8",
    "contractAddress": "0xB5C1c502DAE2d821667C6016b0A67Cf07D16820E",
    "transactionIndex": 57,
    "gasUsed": "1646227",
    "logsBloom": "0x
    "blockHash": "0x8dd3aa16f04da772a518175a3fd5af7942e21aeaff3b5db530916869f1cd0d04",
    "transactionHash": "0xa873173337a2c47bbbe38d6cb9a952617839470feec22ac831279abae8f22234",
    "logs": [],
    "blockNumber": 8648837,
    "cumulativeGasUsed": "9648259",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "c8015c8a158c4744e55ff4a6e59d98f8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"addVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getMileageRecord\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getOwnersRecords\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getVehicleByLicencePlate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"setSafeMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"transferDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"updateMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nicolas Guarini, Lorenzo Ficazzola\",\"kind\":\"dev\",\"methods\":{\"addVehicle(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The initial mileage of the vehicle\"}},\"changeOwner(string,address)\":{\"params\":{\"licensePlate\":\"The licence plate of the veichle\",\"newOwner\":\"The new owner of the vehicle\"}},\"getDeployer()\":{\"returns\":{\"_0\":\"The address of the deployer of the contract\"}},\"getMileageRecord(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The mileage records of a vehicle\"}},\"getOwnersRecords(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The owners records of the vehicle\"}},\"getVehicleByLicencePlate(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The licence plate of the vehicle\",\"_1\":\"The owner's address of the vehicle\",\"_2\":\"The current mileage of the vehicle\"}},\"setSafeMode(bool)\":{\"params\":{\"newState\":\"The new state of the safe mode\"}},\"transferDeployer(address)\":{\"params\":{\"newDeployer\":\"The new deployer of the contract\"}},\"updateMileage(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The new mileage of the vehicle\"}}},\"stateVariables\":{\"vehicles\":{\"details\":\"Define mappings to keep track of vehicles, their mileage records, and owners.\"}},\"title\":\"MileChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addVehicle(string,uint256)\":{\"notice\":\"Function to add a new vehicle\"},\"changeOwner(string,address)\":{\"notice\":\"Function to change the owner of a vehicle\"},\"getDeployer()\":{\"notice\":\"Function to get the deployer of the contract\"},\"getMileageRecord(string)\":{\"notice\":\"Function to get the mileage records of a vehicle\"},\"getOwnersRecords(string)\":{\"notice\":\"Function to get the owners records of a vehicle\"},\"getVehicleByLicencePlate(string)\":{\"notice\":\"Function to get the owner and the latest mileage of a vehicle\"},\"setSafeMode(bool)\":{\"notice\":\"Function to change the state of the safe mode\"},\"transferDeployer(address)\":{\"notice\":\"Function to transfer contract ownership to another address\"},\"updateMileage(string,uint256)\":{\"notice\":\"Function to update the mileage of the vehicle\"}},\"notice\":\"A contract for keeping track of mileage records for vehicles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MileChain.sol\":\"MileChain\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MileChain.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./Owned.sol\\\";\\r\\n\\r\\n/**\\r\\n * A contract for keeping track of mileage records for vehicles.\\r\\n * @title MileChain\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract MileChain is Owned {\\r\\n    /**\\r\\n     * @dev Define the Vehicle struct with licencePlate, owner and mileage\\r\\n     */\\r\\n    struct Vehicle {\\r\\n        string licensePlate;\\r\\n        address owner;\\r\\n        uint256 mileage;\\r\\n    }\\r\\n\\r\\n    struct mileageRecord{\\r\\n        uint256[] miles;\\r\\n        uint256 [] times;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define mappings to keep track of vehicles, their mileage records, and owners.\\r\\n     */\\r\\n    mapping(string => Vehicle) private vehicles;\\r\\n    mapping(string => mileageRecord) private mileageRecords;\\r\\n    mapping(string => address[]) private ownersRecords;\\r\\n\\r\\n    /**\\r\\n     * Function to add a new vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The initial mileage of the vehicle\\r\\n     */\\r\\n    function addVehicle(string memory licensePlate, uint256 mileage) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner == address(0),\\r\\n            \\\"Vehicle already exists\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n        Vehicle memory newVehicle = Vehicle(licensePlate, msg.sender, mileage);\\r\\n        vehicles[licensePlate] = newVehicle;\\r\\n        uint256[] memory miles = new uint256[](1);\\r\\n        uint256[] memory times =  new uint256[](1);\\r\\n        miles[0]=mileage;\\r\\n        times[0]=block.timestamp;\\r\\n        mileageRecords[licensePlate]= mileageRecord(miles,times);\\r\\n        ownersRecords[licensePlate].push(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to update the mileage of the vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The new mileage of the vehicle\\r\\n     */\\r\\n    function updateMileage(string memory licensePlate, uint256 mileage) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner == msg.sender,\\r\\n            \\\"You do not own this vehicle\\\"\\r\\n        );\\r\\n        require(\\r\\n            mileage > vehicles[licensePlate].mileage,\\r\\n            \\\"New mileage must be greater than current mileage\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n        vehicles[licensePlate].mileage = mileage;\\r\\n        mileageRecords[licensePlate].miles.push(mileage);\\r\\n        mileageRecords[licensePlate].times.push(block.timestamp);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the owner of a vehicle\\r\\n     * @param licensePlate The licence plate of the veichle\\r\\n     * @param newOwner The new owner of the vehicle\\r\\n     */\\r\\n    function changeOwner(string memory licensePlate, address newOwner) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n        vehicles[licensePlate].owner = newOwner;\\r\\n        ownersRecords[licensePlate].push(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owner and the latest mileage of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The licence plate of the vehicle\\r\\n     * @return The owner's address of the vehicle\\r\\n     * @return The current mileage of the vehicle\\r\\n     */\\r\\n    function getVehicleByLicencePlate(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (string memory, address, uint256) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        return (\\r\\n            vehicles[licensePlate].licensePlate,\\r\\n            vehicles[licensePlate].owner,\\r\\n            vehicles[licensePlate].mileage\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the mileage records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The mileage records of a vehicle\\r\\n     */\\r\\n    function getMileageRecord(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (uint256[] memory,uint256[] memory) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        return ( mileageRecords[licensePlate].miles, mileageRecords[licensePlate].times);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owners records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The owners records of the vehicle\\r\\n     */\\r\\n    function getOwnersRecords(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (address[] memory) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        return ownersRecords[licensePlate];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x62c5b5f07819840dae703f90632346f59227d04db44b94c9cc2c412012a79087\",\"license\":\"GNU\"},\"contracts/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/**\\r\\n * A contract to manage contract ownership and safe mode\\r\\n * @title Owned\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract Owned {\\r\\n    /**\\r\\n     * @dev Define variables to keep track of deployers and safe mode\\r\\n     */\\r\\n    address internal deployer; // TODO: implement managing a group of deployers\\r\\n    bool internal safeMode;\\r\\n\\r\\n    /**\\r\\n     * @dev Define modifier for giving permission only to the deployers of the contract\\r\\n     */\\r\\n    modifier onlyDeployer() {\\r\\n        require(msg.sender == deployer);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initialize the contract's variables\\r\\n     */\\r\\n    constructor() {\\r\\n        deployer = msg.sender;\\r\\n        safeMode = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to transfer contract ownership to another address\\r\\n     * @param newDeployer The new deployer of the contract\\r\\n     */\\r\\n    function transferDeployer(address newDeployer) public onlyDeployer {\\r\\n        deployer = newDeployer;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the state of the safe mode\\r\\n     * @param newState The new state of the safe mode\\r\\n     */\\r\\n    function setSafeMode(bool newState) public onlyDeployer {\\r\\n        safeMode = newState;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the deployer of the contract\\r\\n     * @return The address of the deployer of the contract\\r\\n     */\\r\\n    function getDeployer() public view onlyDeployer returns (address) {\\r\\n        return deployer;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4a7596730182ca9052717609da092fe373550be7291e97700c437170173abb5d\",\"license\":\"GNU\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff021916908315150217905550611c7c8061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063d8f9d14411610066578063d8f9d1441461010a578063dbe9061714610126578063dd614f7514610157578063e3303ad114610189578063f711d2fb146101b957610093565b806344b7e5f21461009857806372630531146100b4578063c71290cb146100d2578063ca902299146100ee575b600080fd5b6100b260048036038101906100ad919061107e565b6101d5565b005b6100bc61024a565b6040516100c991906110ec565b60405180910390f35b6100ec60048036038101906100e79190611283565b6102cb565b005b61010860048036038101906101039190611283565b61065d565b005b610124600480360381019061011f919061130b565b610879565b005b610140600480360381019061013b9190611367565b610a5c565b60405161014e92919061146e565b60405180910390f35b610171600480360381019061016c9190611367565b610bfe565b60405161018093929190611533565b60405180910390f35b6101a3600480360381019061019e9190611367565b610dd1565b6040516101b0919061162f565b60405180910390f35b6101d360048036038101906101ce9190611651565b610f2d565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022d57600080fd5b80600060146101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a557600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516102f391906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103729061171d565b60405180910390fd5b600060149054906101000a900460ff16156103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c2906117af565b60405180910390fd5b600060405180606001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381525090508060018460405161041191906116ba565b9081526020016040518091039020600082015181600001908161043491906119db565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506000600167ffffffffffffffff8111156104a6576104a5611122565b5b6040519080825280602002602001820160405280156104d45781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff8111156104f4576104f3611122565b5b6040519080825280602002602001820160405280156105225781602001602082028036833780820191505090505b509050838260008151811061053a57610539611aad565b5b602002602001018181525050428160008151811061055b5761055a611aad565b5b60200260200101818152505060405180604001604052808381526020018281525060028660405161058c91906116ba565b908152602001604051809103902060008201518160000190805190602001906105b6929190610fc8565b5060208201518160010190805190602001906105d3929190610fc8565b509050506003856040516105e791906116ba565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b3373ffffffffffffffffffffffffffffffffffffffff1660018360405161068491906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070390611b28565b60405180910390fd5b60018260405161071c91906116ba565b908152602001604051809103902060020154811161076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076690611bba565b60405180910390fd5b600060149054906101000a900460ff16156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906117af565b60405180910390fd5b806001836040516107d091906116ba565b9081526020016040518091039020600201819055506002826040516107f591906116ba565b908152602001604051809103902060000181908060018154018082558091505060019003906000526020600020016000909190919091505560028260405161083d91906116ba565b90815260200160405180910390206001014290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516108a191906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092090611c26565b60405180910390fd5b600060149054906101000a900460ff1615610979576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610970906117af565b60405180910390fd5b8060018360405161098a91906116ba565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003826040516109e991906116ba565b9081526020016040518091039020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b606080600073ffffffffffffffffffffffffffffffffffffffff16600184604051610a8791906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0690611c26565b60405180910390fd5b600283604051610b1f91906116ba565b9081526020016040518091039020600001600284604051610b4091906116ba565b908152602001604051809103902060010181805480602002602001604051908101604052809291908181526020018280548015610b9c57602002820191906000526020600020905b815481526020019060010190808311610b88575b5050505050915080805480602002602001604051908101604052809291908181526020018280548015610bee57602002820191906000526020600020905b815481526020019060010190808311610bda575b5050505050905091509150915091565b6060600080600073ffffffffffffffffffffffffffffffffffffffff16600185604051610c2b91906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caa90611c26565b60405180910390fd5b600184604051610cc391906116ba565b9081526020016040518091039020600001600185604051610ce491906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600186604051610d2691906116ba565b908152602001604051809103902060020154828054610d44906117fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610d70906117fe565b8015610dbd5780601f10610d9257610100808354040283529160200191610dbd565b820191906000526020600020905b815481529060010190602001808311610da057829003601f168201915b505050505092509250925092509193909250565b6060600073ffffffffffffffffffffffffffffffffffffffff16600183604051610dfb91906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7a90611c26565b60405180910390fd5b600382604051610e9391906116ba565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610f2157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ed7575b50505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f8557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054828255906000526020600020908101928215611004579160200282015b82811115611003578251825591602001919060010190610fe8565b5b5090506110119190611015565b5090565b5b8082111561102e576000816000905550600101611016565b5090565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b61105b81611046565b811461106657600080fd5b50565b60008135905061107881611052565b92915050565b6000602082840312156110945761109361103c565b5b60006110a284828501611069565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110d6826110ab565b9050919050565b6110e6816110cb565b82525050565b600060208201905061110160008301846110dd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61115a82611111565b810181811067ffffffffffffffff8211171561117957611178611122565b5b80604052505050565b600061118c611032565b90506111988282611151565b919050565b600067ffffffffffffffff8211156111b8576111b7611122565b5b6111c182611111565b9050602081019050919050565b82818337600083830152505050565b60006111f06111eb8461119d565b611182565b90508281526020810184848401111561120c5761120b61110c565b5b6112178482856111ce565b509392505050565b600082601f83011261123457611233611107565b5b81356112448482602086016111dd565b91505092915050565b6000819050919050565b6112608161124d565b811461126b57600080fd5b50565b60008135905061127d81611257565b92915050565b6000806040838503121561129a5761129961103c565b5b600083013567ffffffffffffffff8111156112b8576112b7611041565b5b6112c48582860161121f565b92505060206112d58582860161126e565b9150509250929050565b6112e8816110cb565b81146112f357600080fd5b50565b600081359050611305816112df565b92915050565b600080604083850312156113225761132161103c565b5b600083013567ffffffffffffffff8111156113405761133f611041565b5b61134c8582860161121f565b925050602061135d858286016112f6565b9150509250929050565b60006020828403121561137d5761137c61103c565b5b600082013567ffffffffffffffff81111561139b5761139a611041565b5b6113a78482850161121f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113e58161124d565b82525050565b60006113f783836113dc565b60208301905092915050565b6000602082019050919050565b600061141b826113b0565b61142581856113bb565b9350611430836113cc565b8060005b8381101561146157815161144888826113eb565b975061145383611403565b925050600181019050611434565b5085935050505092915050565b600060408201905081810360008301526114888185611410565b9050818103602083015261149c8184611410565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114df5780820151818401526020810190506114c4565b60008484015250505050565b60006114f6826114a5565b61150081856114b0565b93506115108185602086016114c1565b61151981611111565b840191505092915050565b61152d8161124d565b82525050565b6000606082019050818103600083015261154d81866114eb565b905061155c60208301856110dd565b6115696040830184611524565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6115a6816110cb565b82525050565b60006115b8838361159d565b60208301905092915050565b6000602082019050919050565b60006115dc82611571565b6115e6818561157c565b93506115f18361158d565b8060005b8381101561162257815161160988826115ac565b9750611614836115c4565b9250506001810190506115f5565b5085935050505092915050565b6000602082019050818103600083015261164981846115d1565b905092915050565b6000602082840312156116675761166661103c565b5b6000611675848285016112f6565b91505092915050565b600081905092915050565b6000611694826114a5565b61169e818561167e565b93506116ae8185602086016114c1565b80840191505092915050565b60006116c68284611689565b915081905092915050565b7f56656869636c6520616c72656164792065786973747300000000000000000000600082015250565b60006117076016836114b0565b9150611712826116d1565b602082019050919050565b60006020820190508181036000830152611736816116fa565b9050919050565b7f436f6e747261637420697320696e20726561642d6f6e6c79206d6f646520666f60008201527f7220736563757269747920726561736f6e732e00000000000000000000000000602082015250565b60006117996033836114b0565b91506117a48261173d565b604082019050919050565b600060208201905081810360008301526117c88161178c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061181657607f821691505b602082108103611829576118286117cf565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611854565b61189b8683611854565b95508019841693508086168417925050509392505050565b6000819050919050565b60006118d86118d36118ce8461124d565b6118b3565b61124d565b9050919050565b6000819050919050565b6118f2836118bd565b6119066118fe826118df565b848454611861565b825550505050565b600090565b61191b61190e565b6119268184846118e9565b505050565b5b8181101561194a5761193f600082611913565b60018101905061192c565b5050565b601f82111561198f576119608161182f565b61196984611844565b81016020851015611978578190505b61198c61198485611844565b83018261192b565b50505b505050565b600082821c905092915050565b60006119b260001984600802611994565b1980831691505092915050565b60006119cb83836119a1565b9150826002028217905092915050565b6119e4826114a5565b67ffffffffffffffff8111156119fd576119fc611122565b5b611a0782546117fe565b611a1282828561194e565b600060209050601f831160018114611a455760008415611a33578287015190505b611a3d85826119bf565b865550611aa5565b601f198416611a538661182f565b60005b82811015611a7b57848901518255600182019150602085019450602081019050611a56565b86831015611a985784890151611a94601f8916826119a1565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f596f7520646f206e6f74206f776e20746869732076656869636c650000000000600082015250565b6000611b12601b836114b0565b9150611b1d82611adc565b602082019050919050565b60006020820190508181036000830152611b4181611b05565b9050919050565b7f4e6577206d696c65616765206d7573742062652067726561746572207468616e60008201527f2063757272656e74206d696c6561676500000000000000000000000000000000602082015250565b6000611ba46030836114b0565b9150611baf82611b48565b604082019050919050565b60006020820190508181036000830152611bd381611b97565b9050919050565b7f56656869636c65206e6f7420666f756e64000000000000000000000000000000600082015250565b6000611c106011836114b0565b9150611c1b82611bda565b602082019050919050565b60006020820190508181036000830152611c3f81611c03565b905091905056fea264697066735822122093b7ee1d49f283392a7282aa886772ec8d6c9243f55b159c7a45935bd6208cfa64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063d8f9d14411610066578063d8f9d1441461010a578063dbe9061714610126578063dd614f7514610157578063e3303ad114610189578063f711d2fb146101b957610093565b806344b7e5f21461009857806372630531146100b4578063c71290cb146100d2578063ca902299146100ee575b600080fd5b6100b260048036038101906100ad919061107e565b6101d5565b005b6100bc61024a565b6040516100c991906110ec565b60405180910390f35b6100ec60048036038101906100e79190611283565b6102cb565b005b61010860048036038101906101039190611283565b61065d565b005b610124600480360381019061011f919061130b565b610879565b005b610140600480360381019061013b9190611367565b610a5c565b60405161014e92919061146e565b60405180910390f35b610171600480360381019061016c9190611367565b610bfe565b60405161018093929190611533565b60405180910390f35b6101a3600480360381019061019e9190611367565b610dd1565b6040516101b0919061162f565b60405180910390f35b6101d360048036038101906101ce9190611651565b610f2d565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022d57600080fd5b80600060146101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a557600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516102f391906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103729061171d565b60405180910390fd5b600060149054906101000a900460ff16156103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c2906117af565b60405180910390fd5b600060405180606001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381525090508060018460405161041191906116ba565b9081526020016040518091039020600082015181600001908161043491906119db565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506000600167ffffffffffffffff8111156104a6576104a5611122565b5b6040519080825280602002602001820160405280156104d45781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff8111156104f4576104f3611122565b5b6040519080825280602002602001820160405280156105225781602001602082028036833780820191505090505b509050838260008151811061053a57610539611aad565b5b602002602001018181525050428160008151811061055b5761055a611aad565b5b60200260200101818152505060405180604001604052808381526020018281525060028660405161058c91906116ba565b908152602001604051809103902060008201518160000190805190602001906105b6929190610fc8565b5060208201518160010190805190602001906105d3929190610fc8565b509050506003856040516105e791906116ba565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b3373ffffffffffffffffffffffffffffffffffffffff1660018360405161068491906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070390611b28565b60405180910390fd5b60018260405161071c91906116ba565b908152602001604051809103902060020154811161076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076690611bba565b60405180910390fd5b600060149054906101000a900460ff16156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906117af565b60405180910390fd5b806001836040516107d091906116ba565b9081526020016040518091039020600201819055506002826040516107f591906116ba565b908152602001604051809103902060000181908060018154018082558091505060019003906000526020600020016000909190919091505560028260405161083d91906116ba565b90815260200160405180910390206001014290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516108a191906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610929576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092090611c26565b60405180910390fd5b600060149054906101000a900460ff1615610979576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610970906117af565b60405180910390fd5b8060018360405161098a91906116ba565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003826040516109e991906116ba565b9081526020016040518091039020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b606080600073ffffffffffffffffffffffffffffffffffffffff16600184604051610a8791906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0690611c26565b60405180910390fd5b600283604051610b1f91906116ba565b9081526020016040518091039020600001600284604051610b4091906116ba565b908152602001604051809103902060010181805480602002602001604051908101604052809291908181526020018280548015610b9c57602002820191906000526020600020905b815481526020019060010190808311610b88575b5050505050915080805480602002602001604051908101604052809291908181526020018280548015610bee57602002820191906000526020600020905b815481526020019060010190808311610bda575b5050505050905091509150915091565b6060600080600073ffffffffffffffffffffffffffffffffffffffff16600185604051610c2b91906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caa90611c26565b60405180910390fd5b600184604051610cc391906116ba565b9081526020016040518091039020600001600185604051610ce491906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600186604051610d2691906116ba565b908152602001604051809103902060020154828054610d44906117fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610d70906117fe565b8015610dbd5780601f10610d9257610100808354040283529160200191610dbd565b820191906000526020600020905b815481529060010190602001808311610da057829003601f168201915b505050505092509250925092509193909250565b6060600073ffffffffffffffffffffffffffffffffffffffff16600183604051610dfb91906116ba565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7a90611c26565b60405180910390fd5b600382604051610e9391906116ba565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610f2157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ed7575b50505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f8557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054828255906000526020600020908101928215611004579160200282015b82811115611003578251825591602001919060010190610fe8565b5b5090506110119190611015565b5090565b5b8082111561102e576000816000905550600101611016565b5090565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b61105b81611046565b811461106657600080fd5b50565b60008135905061107881611052565b92915050565b6000602082840312156110945761109361103c565b5b60006110a284828501611069565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110d6826110ab565b9050919050565b6110e6816110cb565b82525050565b600060208201905061110160008301846110dd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61115a82611111565b810181811067ffffffffffffffff8211171561117957611178611122565b5b80604052505050565b600061118c611032565b90506111988282611151565b919050565b600067ffffffffffffffff8211156111b8576111b7611122565b5b6111c182611111565b9050602081019050919050565b82818337600083830152505050565b60006111f06111eb8461119d565b611182565b90508281526020810184848401111561120c5761120b61110c565b5b6112178482856111ce565b509392505050565b600082601f83011261123457611233611107565b5b81356112448482602086016111dd565b91505092915050565b6000819050919050565b6112608161124d565b811461126b57600080fd5b50565b60008135905061127d81611257565b92915050565b6000806040838503121561129a5761129961103c565b5b600083013567ffffffffffffffff8111156112b8576112b7611041565b5b6112c48582860161121f565b92505060206112d58582860161126e565b9150509250929050565b6112e8816110cb565b81146112f357600080fd5b50565b600081359050611305816112df565b92915050565b600080604083850312156113225761132161103c565b5b600083013567ffffffffffffffff8111156113405761133f611041565b5b61134c8582860161121f565b925050602061135d858286016112f6565b9150509250929050565b60006020828403121561137d5761137c61103c565b5b600082013567ffffffffffffffff81111561139b5761139a611041565b5b6113a78482850161121f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113e58161124d565b82525050565b60006113f783836113dc565b60208301905092915050565b6000602082019050919050565b600061141b826113b0565b61142581856113bb565b9350611430836113cc565b8060005b8381101561146157815161144888826113eb565b975061145383611403565b925050600181019050611434565b5085935050505092915050565b600060408201905081810360008301526114888185611410565b9050818103602083015261149c8184611410565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114df5780820151818401526020810190506114c4565b60008484015250505050565b60006114f6826114a5565b61150081856114b0565b93506115108185602086016114c1565b61151981611111565b840191505092915050565b61152d8161124d565b82525050565b6000606082019050818103600083015261154d81866114eb565b905061155c60208301856110dd565b6115696040830184611524565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6115a6816110cb565b82525050565b60006115b8838361159d565b60208301905092915050565b6000602082019050919050565b60006115dc82611571565b6115e6818561157c565b93506115f18361158d565b8060005b8381101561162257815161160988826115ac565b9750611614836115c4565b9250506001810190506115f5565b5085935050505092915050565b6000602082019050818103600083015261164981846115d1565b905092915050565b6000602082840312156116675761166661103c565b5b6000611675848285016112f6565b91505092915050565b600081905092915050565b6000611694826114a5565b61169e818561167e565b93506116ae8185602086016114c1565b80840191505092915050565b60006116c68284611689565b915081905092915050565b7f56656869636c6520616c72656164792065786973747300000000000000000000600082015250565b60006117076016836114b0565b9150611712826116d1565b602082019050919050565b60006020820190508181036000830152611736816116fa565b9050919050565b7f436f6e747261637420697320696e20726561642d6f6e6c79206d6f646520666f60008201527f7220736563757269747920726561736f6e732e00000000000000000000000000602082015250565b60006117996033836114b0565b91506117a48261173d565b604082019050919050565b600060208201905081810360008301526117c88161178c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061181657607f821691505b602082108103611829576118286117cf565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611854565b61189b8683611854565b95508019841693508086168417925050509392505050565b6000819050919050565b60006118d86118d36118ce8461124d565b6118b3565b61124d565b9050919050565b6000819050919050565b6118f2836118bd565b6119066118fe826118df565b848454611861565b825550505050565b600090565b61191b61190e565b6119268184846118e9565b505050565b5b8181101561194a5761193f600082611913565b60018101905061192c565b5050565b601f82111561198f576119608161182f565b61196984611844565b81016020851015611978578190505b61198c61198485611844565b83018261192b565b50505b505050565b600082821c905092915050565b60006119b260001984600802611994565b1980831691505092915050565b60006119cb83836119a1565b9150826002028217905092915050565b6119e4826114a5565b67ffffffffffffffff8111156119fd576119fc611122565b5b611a0782546117fe565b611a1282828561194e565b600060209050601f831160018114611a455760008415611a33578287015190505b611a3d85826119bf565b865550611aa5565b601f198416611a538661182f565b60005b82811015611a7b57848901518255600182019150602085019450602081019050611a56565b86831015611a985784890151611a94601f8916826119a1565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f596f7520646f206e6f74206f776e20746869732076656869636c650000000000600082015250565b6000611b12601b836114b0565b9150611b1d82611adc565b602082019050919050565b60006020820190508181036000830152611b4181611b05565b9050919050565b7f4e6577206d696c65616765206d7573742062652067726561746572207468616e60008201527f2063757272656e74206d696c6561676500000000000000000000000000000000602082015250565b6000611ba46030836114b0565b9150611baf82611b48565b604082019050919050565b60006020820190508181036000830152611bd381611b97565b9050919050565b7f56656869636c65206e6f7420666f756e64000000000000000000000000000000600082015250565b6000611c106011836114b0565b9150611c1b82611bda565b602082019050919050565b60006020820190508181036000830152611c3f81611c03565b905091905056fea264697066735822122093b7ee1d49f283392a7282aa886772ec8d6c9243f55b159c7a45935bd6208cfa64736f6c63430008120033",
  "devdoc": {
    "author": "Nicolas Guarini, Lorenzo Ficazzola",
    "kind": "dev",
    "methods": {
      "addVehicle(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The initial mileage of the vehicle"
        }
      },
      "changeOwner(string,address)": {
        "params": {
          "licensePlate": "The licence plate of the veichle",
          "newOwner": "The new owner of the vehicle"
        }
      },
      "getDeployer()": {
        "returns": {
          "_0": "The address of the deployer of the contract"
        }
      },
      "getMileageRecord(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The mileage records of a vehicle"
        }
      },
      "getOwnersRecords(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The owners records of the vehicle"
        }
      },
      "getVehicleByLicencePlate(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The licence plate of the vehicle",
          "_1": "The owner's address of the vehicle",
          "_2": "The current mileage of the vehicle"
        }
      },
      "setSafeMode(bool)": {
        "params": {
          "newState": "The new state of the safe mode"
        }
      },
      "transferDeployer(address)": {
        "params": {
          "newDeployer": "The new deployer of the contract"
        }
      },
      "updateMileage(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The new mileage of the vehicle"
        }
      }
    },
    "stateVariables": {
      "vehicles": {
        "details": "Define mappings to keep track of vehicles, their mileage records, and owners."
      }
    },
    "title": "MileChain",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addVehicle(string,uint256)": {
        "notice": "Function to add a new vehicle"
      },
      "changeOwner(string,address)": {
        "notice": "Function to change the owner of a vehicle"
      },
      "getDeployer()": {
        "notice": "Function to get the deployer of the contract"
      },
      "getMileageRecord(string)": {
        "notice": "Function to get the mileage records of a vehicle"
      },
      "getOwnersRecords(string)": {
        "notice": "Function to get the owners records of a vehicle"
      },
      "getVehicleByLicencePlate(string)": {
        "notice": "Function to get the owner and the latest mileage of a vehicle"
      },
      "setSafeMode(bool)": {
        "notice": "Function to change the state of the safe mode"
      },
      "transferDeployer(address)": {
        "notice": "Function to transfer contract ownership to another address"
      },
      "updateMileage(string,uint256)": {
        "notice": "Function to update the mileage of the vehicle"
      }
    },
    "notice": "A contract for keeping track of mileage records for vehicles.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 343,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "deployer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 345,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "safeMode",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 25,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "vehicles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Vehicle)12_storage)"
      },
      {
        "astId": 30,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "mileageRecords",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(mileageRecord)19_storage)"
      },
      {
        "astId": 35,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "ownersRecords",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Vehicle)12_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.Vehicle)",
        "numberOfBytes": "32",
        "value": "t_struct(Vehicle)12_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(mileageRecord)19_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.mileageRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(mileageRecord)19_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Vehicle)12_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.Vehicle",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "licensePlate",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 11,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "mileage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(mileageRecord)19_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.mileageRecord",
        "members": [
          {
            "astId": 15,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "miles",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 18,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "times",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}