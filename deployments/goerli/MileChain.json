{
  "address": "0x4126CB87AE088895c4e211033Fbc8BFae1928171",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "addVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getMileageRecord",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getOwnersRecords",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getVehicleByLicencePlate",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setSafeMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "transferDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "updateMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x023296e860408bfd00ab8305324d2036cc769baa3de9fb207c5872fb30740cac",
  "receipt": {
    "to": null,
    "from": "0x7FbC35C78deDdD220b16b3fB6B844456B4D37F1c",
    "contractAddress": "0x4126CB87AE088895c4e211033Fbc8BFae1928171",
    "transactionIndex": 45,
    "gasUsed": "1508162",
    "logsBloom": "0x
    "blockHash": "0x548576b2da0c9c7abaabc713bf4e192f8e6d8b073f35d30a57f2a70d626bd9a6",
    "transactionHash": "0x023296e860408bfd00ab8305324d2036cc769baa3de9fb207c5872fb30740cac",
    "logs": [],
    "blockNumber": 8648280,
    "cumulativeGasUsed": "6514853",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "0181df54124904ee78f73e83ad5a6858",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"addVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getMileageRecord\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getOwnersRecords\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getVehicleByLicencePlate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"setSafeMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"transferDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"updateMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nicolas Guarini, Lorenzo Ficazzola\",\"kind\":\"dev\",\"methods\":{\"addVehicle(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The initial mileage of the vehicle\"}},\"changeOwner(string,address)\":{\"params\":{\"licensePlate\":\"The licence plate of the veichle\",\"newOwner\":\"The new owner of the vehicle\"}},\"getDeployer()\":{\"returns\":{\"_0\":\"The address of the deployer of the contract\"}},\"getMileageRecord(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The mileage records of a vehicle\"}},\"getOwnersRecords(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The owners records of the vehicle\"}},\"getVehicleByLicencePlate(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The licence plate of the vehicle\",\"_1\":\"The owner's address of the vehicle\",\"_2\":\"The current mileage of the vehicle\"}},\"setSafeMode(bool)\":{\"params\":{\"newState\":\"The new state of the safe mode\"}},\"transferDeployer(address)\":{\"params\":{\"newDeployer\":\"The new deployer of the contract\"}},\"updateMileage(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The new mileage of the vehicle\"}}},\"stateVariables\":{\"vehicles\":{\"details\":\"Define mappings to keep track of vehicles, their mileage records, and owners.\"}},\"title\":\"MileChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addVehicle(string,uint256)\":{\"notice\":\"Function to add a new vehicle\"},\"changeOwner(string,address)\":{\"notice\":\"Function to change the owner of a vehicle\"},\"getDeployer()\":{\"notice\":\"Function to get the deployer of the contract\"},\"getMileageRecord(string)\":{\"notice\":\"Function to get the mileage records of a vehicle\"},\"getOwnersRecords(string)\":{\"notice\":\"Function to get the owners records of a vehicle\"},\"getVehicleByLicencePlate(string)\":{\"notice\":\"Function to get the owner and the latest mileage of a vehicle\"},\"setSafeMode(bool)\":{\"notice\":\"Function to change the state of the safe mode\"},\"transferDeployer(address)\":{\"notice\":\"Function to transfer contract ownership to another address\"},\"updateMileage(string,uint256)\":{\"notice\":\"Function to update the mileage of the vehicle\"}},\"notice\":\"A contract for keeping track of mileage records for vehicles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MileChain.sol\":\"MileChain\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MileChain.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./Owned.sol\\\";\\r\\n\\r\\n/**\\r\\n * A contract for keeping track of mileage records for vehicles.\\r\\n * @title MileChain\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract MileChain is Owned {\\r\\n    /**\\r\\n     * @dev Define the Vehicle struct with licencePlate, owner and mileage\\r\\n     */\\r\\n    struct Vehicle {\\r\\n        string licensePlate;\\r\\n        address owner;\\r\\n        uint256 mileage;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define mappings to keep track of vehicles, their mileage records, and owners.\\r\\n     */\\r\\n    mapping(string => Vehicle) private vehicles;\\r\\n    mapping(string => uint256[]) private mileageRecords;\\r\\n    mapping(string => address[]) private ownersRecords;\\r\\n\\r\\n    /**\\r\\n     * Function to add a new vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The initial mileage of the vehicle\\r\\n     */\\r\\n    function addVehicle(string memory licensePlate, uint256 mileage) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner == address(0),\\r\\n            \\\"Vehicle already exists\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n        Vehicle memory newVehicle = Vehicle(licensePlate, msg.sender, mileage);\\r\\n        vehicles[licensePlate] = newVehicle;\\r\\n        mileageRecords[licensePlate].push(mileage);\\r\\n        ownersRecords[licensePlate].push(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to update the mileage of the vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The new mileage of the vehicle\\r\\n     */\\r\\n    function updateMileage(string memory licensePlate, uint256 mileage) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner == msg.sender,\\r\\n            \\\"You do not own this vehicle\\\"\\r\\n        );\\r\\n        require(\\r\\n            mileage > vehicles[licensePlate].mileage,\\r\\n            \\\"New mileage must be greater than current mileage\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n        vehicles[licensePlate].mileage = mileage;\\r\\n        mileageRecords[licensePlate].push(mileage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the owner of a vehicle\\r\\n     * @param licensePlate The licence plate of the veichle\\r\\n     * @param newOwner The new owner of the vehicle\\r\\n     */\\r\\n    function changeOwner(string memory licensePlate, address newOwner) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n        vehicles[licensePlate].owner = newOwner;\\r\\n        ownersRecords[licensePlate].push(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owner and the latest mileage of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The licence plate of the vehicle\\r\\n     * @return The owner's address of the vehicle\\r\\n     * @return The current mileage of the vehicle\\r\\n     */\\r\\n    function getVehicleByLicencePlate(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (string memory, address, uint256) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        return (\\r\\n            vehicles[licensePlate].licensePlate,\\r\\n            vehicles[licensePlate].owner,\\r\\n            vehicles[licensePlate].mileage\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the mileage records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The mileage records of a vehicle\\r\\n     */\\r\\n    function getMileageRecord(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (uint256[] memory) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        return mileageRecords[licensePlate];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owners records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The owners records of the vehicle\\r\\n     */\\r\\n    function getOwnersRecords(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (address[] memory) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        return ownersRecords[licensePlate];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3c4570054e81f2fcefc1ad75dcd6e1d1640d0a5e15748d203318aece7ca29cb1\",\"license\":\"GNU\"},\"contracts/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/**\\r\\n * A contract to manage contract ownership and safe mode\\r\\n * @title Owned\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract Owned {\\r\\n    /**\\r\\n     * @dev Define variables to keep track of deployers and safe mode\\r\\n     */\\r\\n    address internal deployer; // TODO: implement managing a group of deployers\\r\\n    bool internal safeMode;\\r\\n\\r\\n    /**\\r\\n     * @dev Define modifier for giving permission only to the deployers of the contract\\r\\n     */\\r\\n    modifier onlyDeployer() {\\r\\n        require(msg.sender == deployer);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initialize the contract's variables\\r\\n     */\\r\\n    constructor() {\\r\\n        deployer = msg.sender;\\r\\n        safeMode = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to transfer contract ownership to another address\\r\\n     * @param newDeployer The new deployer of the contract\\r\\n     */\\r\\n    function transferDeployer(address newDeployer) public onlyDeployer {\\r\\n        deployer = newDeployer;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the state of the safe mode\\r\\n     * @param newState The new state of the safe mode\\r\\n     */\\r\\n    function setSafeMode(bool newState) public onlyDeployer {\\r\\n        safeMode = newState;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the deployer of the contract\\r\\n     * @return The address of the deployer of the contract\\r\\n     */\\r\\n    function getDeployer() public view onlyDeployer returns (address) {\\r\\n        return deployer;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4a7596730182ca9052717609da092fe373550be7291e97700c437170173abb5d\",\"license\":\"GNU\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff0219169083151502179055506119fb8061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063d8f9d14411610066578063d8f9d1441461010a578063dbe9061714610126578063dd614f7514610156578063e3303ad114610188578063f711d2fb146101b857610093565b806344b7e5f21461009857806372630531146100b4578063c71290cb146100d2578063ca902299146100ee575b600080fd5b6100b260048036038101906100ad9190610e41565b6101d4565b005b6100bc610249565b6040516100c99190610eaf565b60405180910390f35b6100ec60048036038101906100e79190611046565b6102ca565b005b61010860048036038101906101039190611046565b610551565b005b610124600480360381019061011f91906110ce565b610722565b005b610140600480360381019061013b919061112a565b610905565b60405161014d9190611231565b60405180910390f35b610170600480360381019061016b919061112a565b610a2b565b60405161017f939291906112e1565b60405180910390f35b6101a2600480360381019061019d919061112a565b610bfe565b6040516101af91906113dd565b60405180910390f35b6101d260048036038101906101cd91906113ff565b610d5a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022c57600080fd5b80600060146101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516102f29190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461037a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610371906114cb565b60405180910390fd5b600060149054906101000a900460ff16156103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c19061155d565b60405180910390fd5b600060405180606001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152509050806001846040516104109190611468565b908152602001604051809103902060008201518160000190816104339190611789565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506002836040516104989190611468565b90815260200160405180910390208290806001815401808255809150506001900390600052602060002001600090919091909150556003836040516104dd9190611468565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b3373ffffffffffffffffffffffffffffffffffffffff166001836040516105789190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f7906118a7565b60405180910390fd5b6001826040516106109190611468565b9081526020016040518091039020600201548111610663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065a90611939565b60405180910390fd5b600060149054906101000a900460ff16156106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa9061155d565b60405180910390fd5b806001836040516106c49190611468565b9081526020016040518091039020600201819055506002826040516106e99190611468565b90815260200160405180910390208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff1660018360405161074a9190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c9906119a5565b60405180910390fd5b600060149054906101000a900460ff1615610822576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108199061155d565b60405180910390fd5b806001836040516108339190611468565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003826040516108929190611468565b9081526020016040518091039020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6060600073ffffffffffffffffffffffffffffffffffffffff1660018360405161092f9190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ae906119a5565b60405180910390fd5b6002826040516109c79190611468565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610a1f57602002820191906000526020600020905b815481526020019060010190808311610a0b575b50505050509050919050565b6060600080600073ffffffffffffffffffffffffffffffffffffffff16600185604051610a589190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad7906119a5565b60405180910390fd5b600184604051610af09190611468565b9081526020016040518091039020600001600185604051610b119190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600186604051610b539190611468565b908152602001604051809103902060020154828054610b71906115ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9d906115ac565b8015610bea5780601f10610bbf57610100808354040283529160200191610bea565b820191906000526020600020905b815481529060010190602001808311610bcd57829003601f168201915b505050505092509250925092509193909250565b6060600073ffffffffffffffffffffffffffffffffffffffff16600183604051610c289190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca7906119a5565b60405180910390fd5b600382604051610cc09190611468565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610d4e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d04575b50505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610db257600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b610e1e81610e09565b8114610e2957600080fd5b50565b600081359050610e3b81610e15565b92915050565b600060208284031215610e5757610e56610dff565b5b6000610e6584828501610e2c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9982610e6e565b9050919050565b610ea981610e8e565b82525050565b6000602082019050610ec46000830184610ea0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f1d82610ed4565b810181811067ffffffffffffffff82111715610f3c57610f3b610ee5565b5b80604052505050565b6000610f4f610df5565b9050610f5b8282610f14565b919050565b600067ffffffffffffffff821115610f7b57610f7a610ee5565b5b610f8482610ed4565b9050602081019050919050565b82818337600083830152505050565b6000610fb3610fae84610f60565b610f45565b905082815260208101848484011115610fcf57610fce610ecf565b5b610fda848285610f91565b509392505050565b600082601f830112610ff757610ff6610eca565b5b8135611007848260208601610fa0565b91505092915050565b6000819050919050565b61102381611010565b811461102e57600080fd5b50565b6000813590506110408161101a565b92915050565b6000806040838503121561105d5761105c610dff565b5b600083013567ffffffffffffffff81111561107b5761107a610e04565b5b61108785828601610fe2565b925050602061109885828601611031565b9150509250929050565b6110ab81610e8e565b81146110b657600080fd5b50565b6000813590506110c8816110a2565b92915050565b600080604083850312156110e5576110e4610dff565b5b600083013567ffffffffffffffff81111561110357611102610e04565b5b61110f85828601610fe2565b9250506020611120858286016110b9565b9150509250929050565b6000602082840312156111405761113f610dff565b5b600082013567ffffffffffffffff81111561115e5761115d610e04565b5b61116a84828501610fe2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111a881611010565b82525050565b60006111ba838361119f565b60208301905092915050565b6000602082019050919050565b60006111de82611173565b6111e8818561117e565b93506111f38361118f565b8060005b8381101561122457815161120b88826111ae565b9750611216836111c6565b9250506001810190506111f7565b5085935050505092915050565b6000602082019050818103600083015261124b81846111d3565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561128d578082015181840152602081019050611272565b60008484015250505050565b60006112a482611253565b6112ae818561125e565b93506112be81856020860161126f565b6112c781610ed4565b840191505092915050565b6112db81611010565b82525050565b600060608201905081810360008301526112fb8186611299565b905061130a6020830185610ea0565b61131760408301846112d2565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61135481610e8e565b82525050565b6000611366838361134b565b60208301905092915050565b6000602082019050919050565b600061138a8261131f565b611394818561132a565b935061139f8361133b565b8060005b838110156113d05781516113b7888261135a565b97506113c283611372565b9250506001810190506113a3565b5085935050505092915050565b600060208201905081810360008301526113f7818461137f565b905092915050565b60006020828403121561141557611414610dff565b5b6000611423848285016110b9565b91505092915050565b600081905092915050565b600061144282611253565b61144c818561142c565b935061145c81856020860161126f565b80840191505092915050565b60006114748284611437565b915081905092915050565b7f56656869636c6520616c72656164792065786973747300000000000000000000600082015250565b60006114b560168361125e565b91506114c08261147f565b602082019050919050565b600060208201905081810360008301526114e4816114a8565b9050919050565b7f436f6e747261637420697320696e20726561642d6f6e6c79206d6f646520666f60008201527f7220736563757269747920726561736f6e732e00000000000000000000000000602082015250565b600061154760338361125e565b9150611552826114eb565b604082019050919050565b600060208201905081810360008301526115768161153a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806115c457607f821691505b6020821081036115d7576115d661157d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261163f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611602565b6116498683611602565b95508019841693508086168417925050509392505050565b6000819050919050565b600061168661168161167c84611010565b611661565b611010565b9050919050565b6000819050919050565b6116a08361166b565b6116b46116ac8261168d565b84845461160f565b825550505050565b600090565b6116c96116bc565b6116d4818484611697565b505050565b5b818110156116f8576116ed6000826116c1565b6001810190506116da565b5050565b601f82111561173d5761170e816115dd565b611717846115f2565b81016020851015611726578190505b61173a611732856115f2565b8301826116d9565b50505b505050565b600082821c905092915050565b600061176060001984600802611742565b1980831691505092915050565b6000611779838361174f565b9150826002028217905092915050565b61179282611253565b67ffffffffffffffff8111156117ab576117aa610ee5565b5b6117b582546115ac565b6117c08282856116fc565b600060209050601f8311600181146117f357600084156117e1578287015190505b6117eb858261176d565b865550611853565b601f198416611801866115dd565b60005b8281101561182957848901518255600182019150602085019450602081019050611804565b868310156118465784890151611842601f89168261174f565b8355505b6001600288020188555050505b505050505050565b7f596f7520646f206e6f74206f776e20746869732076656869636c650000000000600082015250565b6000611891601b8361125e565b915061189c8261185b565b602082019050919050565b600060208201905081810360008301526118c081611884565b9050919050565b7f4e6577206d696c65616765206d7573742062652067726561746572207468616e60008201527f2063757272656e74206d696c6561676500000000000000000000000000000000602082015250565b600061192360308361125e565b915061192e826118c7565b604082019050919050565b6000602082019050818103600083015261195281611916565b9050919050565b7f56656869636c65206e6f7420666f756e64000000000000000000000000000000600082015250565b600061198f60118361125e565b915061199a82611959565b602082019050919050565b600060208201905081810360008301526119be81611982565b905091905056fea26469706673582212209595cb33abe85bc6fd544a4b9d6a453bd6e25901e221ccbb4125aa71114e671464736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063d8f9d14411610066578063d8f9d1441461010a578063dbe9061714610126578063dd614f7514610156578063e3303ad114610188578063f711d2fb146101b857610093565b806344b7e5f21461009857806372630531146100b4578063c71290cb146100d2578063ca902299146100ee575b600080fd5b6100b260048036038101906100ad9190610e41565b6101d4565b005b6100bc610249565b6040516100c99190610eaf565b60405180910390f35b6100ec60048036038101906100e79190611046565b6102ca565b005b61010860048036038101906101039190611046565b610551565b005b610124600480360381019061011f91906110ce565b610722565b005b610140600480360381019061013b919061112a565b610905565b60405161014d9190611231565b60405180910390f35b610170600480360381019061016b919061112a565b610a2b565b60405161017f939291906112e1565b60405180910390f35b6101a2600480360381019061019d919061112a565b610bfe565b6040516101af91906113dd565b60405180910390f35b6101d260048036038101906101cd91906113ff565b610d5a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022c57600080fd5b80600060146101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516102f29190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461037a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610371906114cb565b60405180910390fd5b600060149054906101000a900460ff16156103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c19061155d565b60405180910390fd5b600060405180606001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152509050806001846040516104109190611468565b908152602001604051809103902060008201518160000190816104339190611789565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506002836040516104989190611468565b90815260200160405180910390208290806001815401808255809150506001900390600052602060002001600090919091909150556003836040516104dd9190611468565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b3373ffffffffffffffffffffffffffffffffffffffff166001836040516105789190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f7906118a7565b60405180910390fd5b6001826040516106109190611468565b9081526020016040518091039020600201548111610663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065a90611939565b60405180910390fd5b600060149054906101000a900460ff16156106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa9061155d565b60405180910390fd5b806001836040516106c49190611468565b9081526020016040518091039020600201819055506002826040516106e99190611468565b90815260200160405180910390208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff1660018360405161074a9190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c9906119a5565b60405180910390fd5b600060149054906101000a900460ff1615610822576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108199061155d565b60405180910390fd5b806001836040516108339190611468565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003826040516108929190611468565b9081526020016040518091039020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6060600073ffffffffffffffffffffffffffffffffffffffff1660018360405161092f9190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ae906119a5565b60405180910390fd5b6002826040516109c79190611468565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610a1f57602002820191906000526020600020905b815481526020019060010190808311610a0b575b50505050509050919050565b6060600080600073ffffffffffffffffffffffffffffffffffffffff16600185604051610a589190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad7906119a5565b60405180910390fd5b600184604051610af09190611468565b9081526020016040518091039020600001600185604051610b119190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600186604051610b539190611468565b908152602001604051809103902060020154828054610b71906115ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9d906115ac565b8015610bea5780601f10610bbf57610100808354040283529160200191610bea565b820191906000526020600020905b815481529060010190602001808311610bcd57829003601f168201915b505050505092509250925092509193909250565b6060600073ffffffffffffffffffffffffffffffffffffffff16600183604051610c289190611468565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca7906119a5565b60405180910390fd5b600382604051610cc09190611468565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015610d4e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d04575b50505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610db257600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b610e1e81610e09565b8114610e2957600080fd5b50565b600081359050610e3b81610e15565b92915050565b600060208284031215610e5757610e56610dff565b5b6000610e6584828501610e2c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9982610e6e565b9050919050565b610ea981610e8e565b82525050565b6000602082019050610ec46000830184610ea0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f1d82610ed4565b810181811067ffffffffffffffff82111715610f3c57610f3b610ee5565b5b80604052505050565b6000610f4f610df5565b9050610f5b8282610f14565b919050565b600067ffffffffffffffff821115610f7b57610f7a610ee5565b5b610f8482610ed4565b9050602081019050919050565b82818337600083830152505050565b6000610fb3610fae84610f60565b610f45565b905082815260208101848484011115610fcf57610fce610ecf565b5b610fda848285610f91565b509392505050565b600082601f830112610ff757610ff6610eca565b5b8135611007848260208601610fa0565b91505092915050565b6000819050919050565b61102381611010565b811461102e57600080fd5b50565b6000813590506110408161101a565b92915050565b6000806040838503121561105d5761105c610dff565b5b600083013567ffffffffffffffff81111561107b5761107a610e04565b5b61108785828601610fe2565b925050602061109885828601611031565b9150509250929050565b6110ab81610e8e565b81146110b657600080fd5b50565b6000813590506110c8816110a2565b92915050565b600080604083850312156110e5576110e4610dff565b5b600083013567ffffffffffffffff81111561110357611102610e04565b5b61110f85828601610fe2565b9250506020611120858286016110b9565b9150509250929050565b6000602082840312156111405761113f610dff565b5b600082013567ffffffffffffffff81111561115e5761115d610e04565b5b61116a84828501610fe2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111a881611010565b82525050565b60006111ba838361119f565b60208301905092915050565b6000602082019050919050565b60006111de82611173565b6111e8818561117e565b93506111f38361118f565b8060005b8381101561122457815161120b88826111ae565b9750611216836111c6565b9250506001810190506111f7565b5085935050505092915050565b6000602082019050818103600083015261124b81846111d3565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561128d578082015181840152602081019050611272565b60008484015250505050565b60006112a482611253565b6112ae818561125e565b93506112be81856020860161126f565b6112c781610ed4565b840191505092915050565b6112db81611010565b82525050565b600060608201905081810360008301526112fb8186611299565b905061130a6020830185610ea0565b61131760408301846112d2565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61135481610e8e565b82525050565b6000611366838361134b565b60208301905092915050565b6000602082019050919050565b600061138a8261131f565b611394818561132a565b935061139f8361133b565b8060005b838110156113d05781516113b7888261135a565b97506113c283611372565b9250506001810190506113a3565b5085935050505092915050565b600060208201905081810360008301526113f7818461137f565b905092915050565b60006020828403121561141557611414610dff565b5b6000611423848285016110b9565b91505092915050565b600081905092915050565b600061144282611253565b61144c818561142c565b935061145c81856020860161126f565b80840191505092915050565b60006114748284611437565b915081905092915050565b7f56656869636c6520616c72656164792065786973747300000000000000000000600082015250565b60006114b560168361125e565b91506114c08261147f565b602082019050919050565b600060208201905081810360008301526114e4816114a8565b9050919050565b7f436f6e747261637420697320696e20726561642d6f6e6c79206d6f646520666f60008201527f7220736563757269747920726561736f6e732e00000000000000000000000000602082015250565b600061154760338361125e565b9150611552826114eb565b604082019050919050565b600060208201905081810360008301526115768161153a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806115c457607f821691505b6020821081036115d7576115d661157d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261163f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611602565b6116498683611602565b95508019841693508086168417925050509392505050565b6000819050919050565b600061168661168161167c84611010565b611661565b611010565b9050919050565b6000819050919050565b6116a08361166b565b6116b46116ac8261168d565b84845461160f565b825550505050565b600090565b6116c96116bc565b6116d4818484611697565b505050565b5b818110156116f8576116ed6000826116c1565b6001810190506116da565b5050565b601f82111561173d5761170e816115dd565b611717846115f2565b81016020851015611726578190505b61173a611732856115f2565b8301826116d9565b50505b505050565b600082821c905092915050565b600061176060001984600802611742565b1980831691505092915050565b6000611779838361174f565b9150826002028217905092915050565b61179282611253565b67ffffffffffffffff8111156117ab576117aa610ee5565b5b6117b582546115ac565b6117c08282856116fc565b600060209050601f8311600181146117f357600084156117e1578287015190505b6117eb858261176d565b865550611853565b601f198416611801866115dd565b60005b8281101561182957848901518255600182019150602085019450602081019050611804565b868310156118465784890151611842601f89168261174f565b8355505b6001600288020188555050505b505050505050565b7f596f7520646f206e6f74206f776e20746869732076656869636c650000000000600082015250565b6000611891601b8361125e565b915061189c8261185b565b602082019050919050565b600060208201905081810360008301526118c081611884565b9050919050565b7f4e6577206d696c65616765206d7573742062652067726561746572207468616e60008201527f2063757272656e74206d696c6561676500000000000000000000000000000000602082015250565b600061192360308361125e565b915061192e826118c7565b604082019050919050565b6000602082019050818103600083015261195281611916565b9050919050565b7f56656869636c65206e6f7420666f756e64000000000000000000000000000000600082015250565b600061198f60118361125e565b915061199a82611959565b602082019050919050565b600060208201905081810360008301526119be81611982565b905091905056fea26469706673582212209595cb33abe85bc6fd544a4b9d6a453bd6e25901e221ccbb4125aa71114e671464736f6c63430008120033",
  "devdoc": {
    "author": "Nicolas Guarini, Lorenzo Ficazzola",
    "kind": "dev",
    "methods": {
      "addVehicle(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The initial mileage of the vehicle"
        }
      },
      "changeOwner(string,address)": {
        "params": {
          "licensePlate": "The licence plate of the veichle",
          "newOwner": "The new owner of the vehicle"
        }
      },
      "getDeployer()": {
        "returns": {
          "_0": "The address of the deployer of the contract"
        }
      },
      "getMileageRecord(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The mileage records of a vehicle"
        }
      },
      "getOwnersRecords(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The owners records of the vehicle"
        }
      },
      "getVehicleByLicencePlate(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The licence plate of the vehicle",
          "_1": "The owner's address of the vehicle",
          "_2": "The current mileage of the vehicle"
        }
      },
      "setSafeMode(bool)": {
        "params": {
          "newState": "The new state of the safe mode"
        }
      },
      "transferDeployer(address)": {
        "params": {
          "newDeployer": "The new deployer of the contract"
        }
      },
      "updateMileage(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The new mileage of the vehicle"
        }
      }
    },
    "stateVariables": {
      "vehicles": {
        "details": "Define mappings to keep track of vehicles, their mileage records, and owners."
      }
    },
    "title": "MileChain",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addVehicle(string,uint256)": {
        "notice": "Function to add a new vehicle"
      },
      "changeOwner(string,address)": {
        "notice": "Function to change the owner of a vehicle"
      },
      "getDeployer()": {
        "notice": "Function to get the deployer of the contract"
      },
      "getMileageRecord(string)": {
        "notice": "Function to get the mileage records of a vehicle"
      },
      "getOwnersRecords(string)": {
        "notice": "Function to get the owners records of a vehicle"
      },
      "getVehicleByLicencePlate(string)": {
        "notice": "Function to get the owner and the latest mileage of a vehicle"
      },
      "setSafeMode(bool)": {
        "notice": "Function to change the state of the safe mode"
      },
      "transferDeployer(address)": {
        "notice": "Function to transfer contract ownership to another address"
      },
      "updateMileage(string,uint256)": {
        "notice": "Function to update the mileage of the vehicle"
      }
    },
    "notice": "A contract for keeping track of mileage records for vehicles.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 280,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "deployer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 282,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "safeMode",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 18,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "vehicles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Vehicle)12_storage)"
      },
      {
        "astId": 23,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "mileageRecords",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 28,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "ownersRecords",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Vehicle)12_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.Vehicle)",
        "numberOfBytes": "32",
        "value": "t_struct(Vehicle)12_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Vehicle)12_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.Vehicle",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "licensePlate",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 11,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "mileage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}