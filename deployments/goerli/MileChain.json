{
  "address": "0x72bCC74C50C7D672a930ac676bCf9939656fA071",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "addVehicle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getMileageRecord",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "mileage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.MileageRecord[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getOwnersRecords",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.OwnersRecord[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        }
      ],
      "name": "getVehicleByLicencePlate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "licensePlate",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "mileage",
              "type": "uint256"
            }
          ],
          "internalType": "struct MileChain.Vehicle",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setSafeMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "transferDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "licensePlate",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "mileage",
          "type": "uint256"
        }
      ],
      "name": "updateMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x946d22809dccd03513ea90b0cd1c5b0f1198a4c2f899859685b8ef8ac45db4bf",
  "receipt": {
    "to": null,
    "from": "0x7FbC35C78deDdD220b16b3fB6B844456B4D37F1c",
    "contractAddress": "0x72bCC74C50C7D672a930ac676bCf9939656fA071",
    "transactionIndex": 56,
    "gasUsed": "1618168",
    "logsBloom": "0x
    "blockHash": "0x03fc0d47a6ac1fd1690ac2593d06a6cc3b7750d518d8c03a7723f2f51c4c4fe3",
    "transactionHash": "0x946d22809dccd03513ea90b0cd1c5b0f1198a4c2f899859685b8ef8ac45db4bf",
    "logs": [],
    "blockNumber": 8660002,
    "cumulativeGasUsed": "13127386",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "4b3d0a67251c5e04bfc4479a285e28e6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"addVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getMileageRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.MileageRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getOwnersRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.OwnersRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"}],\"name\":\"getVehicleByLicencePlate\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"internalType\":\"struct MileChain.Vehicle\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"setSafeMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"transferDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"}],\"name\":\"updateMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nicolas Guarini, Lorenzo Ficazzola\",\"kind\":\"dev\",\"methods\":{\"addVehicle(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The initial mileage of the vehicle\"}},\"changeOwner(string,address)\":{\"params\":{\"licensePlate\":\"The licence plate of the veichle\",\"newOwner\":\"The new owner of the vehicle\"}},\"getDeployer()\":{\"returns\":{\"_0\":\"The address of the deployer of the contract\"}},\"getMileageRecord(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The mileage records of a vehicle\"}},\"getOwnersRecords(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The owners records of the vehicle\"}},\"getVehicleByLicencePlate(string)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\"},\"returns\":{\"_0\":\"The searched vehicle struct\"}},\"setSafeMode(bool)\":{\"params\":{\"newState\":\"The new state of the safe mode\"}},\"transferDeployer(address)\":{\"params\":{\"newDeployer\":\"The new deployer of the contract\"}},\"updateMileage(string,uint256)\":{\"params\":{\"licensePlate\":\"The licence plate of the vehicle\",\"mileage\":\"The new mileage of the vehicle\"}}},\"stateVariables\":{\"vehicles\":{\"details\":\"Define mappings to keep track of vehicles, their mileage records, and owners.\"}},\"title\":\"MileChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addVehicle(string,uint256)\":{\"notice\":\"Function to add a new vehicle\"},\"changeOwner(string,address)\":{\"notice\":\"Function to change the owner of a vehicle\"},\"getDeployer()\":{\"notice\":\"Function to get the deployer of the contract\"},\"getMileageRecord(string)\":{\"notice\":\"Function to get the mileage records of a vehicle\"},\"getOwnersRecords(string)\":{\"notice\":\"Function to get the owners records of a vehicle\"},\"getVehicleByLicencePlate(string)\":{\"notice\":\"Function to get the owner and the latest mileage of a vehicle\"},\"setSafeMode(bool)\":{\"notice\":\"Function to change the state of the safe mode\"},\"transferDeployer(address)\":{\"notice\":\"Function to transfer contract ownership to another address\"},\"updateMileage(string,uint256)\":{\"notice\":\"Function to update the mileage of the vehicle\"}},\"notice\":\"A contract for keeping track of mileage records for vehicles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MileChain.sol\":\"MileChain\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MileChain.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./Owned.sol\\\";\\r\\n\\r\\n/**\\r\\n * A contract for keeping track of mileage records for vehicles.\\r\\n * @title MileChain\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract MileChain is Owned {\\r\\n    /**\\r\\n     * @dev Define the Vehicle struct with licencePlate, owner and mileage\\r\\n     */\\r\\n    struct Vehicle {\\r\\n        string licensePlate;\\r\\n        address owner;\\r\\n        uint256 mileage;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define the MileageRecord struct with mileage and unix timestamp.\\r\\n     */\\r\\n    struct MileageRecord {\\r\\n        uint256 mileage;\\r\\n        uint256 timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define the OwnersRecord struct with owner address and unix timestamp.\\r\\n     */\\r\\n    struct OwnersRecord {\\r\\n        address owner;\\r\\n        uint256 timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Define mappings to keep track of vehicles, their mileage records, and owners.\\r\\n     */\\r\\n    mapping(string => Vehicle) private vehicles;\\r\\n    mapping(string => MileageRecord[]) private mileageRecords;\\r\\n    mapping(string => OwnersRecord[]) private ownersRecords;\\r\\n\\r\\n    /**\\r\\n     * Function to add a new vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The initial mileage of the vehicle\\r\\n     */\\r\\n    function addVehicle(string memory licensePlate, uint256 mileage) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner == address(0),\\r\\n            \\\"Vehicle already exists\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n\\r\\n        vehicles[licensePlate] = Vehicle(licensePlate, msg.sender, mileage);\\r\\n        mileageRecords[licensePlate].push(\\r\\n            MileageRecord(mileage, block.timestamp)\\r\\n        );\\r\\n        ownersRecords[licensePlate].push(\\r\\n            OwnersRecord(msg.sender, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to update the mileage of the vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @param mileage The new mileage of the vehicle\\r\\n     */\\r\\n    function updateMileage(string memory licensePlate, uint256 mileage) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner == msg.sender,\\r\\n            \\\"You do not own this vehicle\\\"\\r\\n        );\\r\\n        require(\\r\\n            mileage > vehicles[licensePlate].mileage,\\r\\n            \\\"New mileage must be greater than current mileage\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n\\r\\n        vehicles[licensePlate].mileage = mileage;\\r\\n        mileageRecords[licensePlate].push(\\r\\n            MileageRecord(mileage, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the owner of a vehicle\\r\\n     * @param licensePlate The licence plate of the veichle\\r\\n     * @param newOwner The new owner of the vehicle\\r\\n     */\\r\\n    function changeOwner(string memory licensePlate, address newOwner) public {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        require(\\r\\n            !safeMode,\\r\\n            \\\"Contract is in read-only mode for security reasons.\\\"\\r\\n        );\\r\\n\\r\\n        vehicles[licensePlate].owner = newOwner;\\r\\n        ownersRecords[licensePlate].push(\\r\\n            OwnersRecord(newOwner, block.timestamp)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owner and the latest mileage of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The searched vehicle struct\\r\\n     */\\r\\n    function getVehicleByLicencePlate(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (Vehicle memory) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n        return vehicles[licensePlate];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the mileage records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The mileage records of a vehicle\\r\\n     */\\r\\n    function getMileageRecord(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (MileageRecord[] memory) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n\\r\\n        return mileageRecords[licensePlate];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the owners records of a vehicle\\r\\n     * @param licensePlate The licence plate of the vehicle\\r\\n     * @return The owners records of the vehicle\\r\\n     */\\r\\n    function getOwnersRecords(\\r\\n        string memory licensePlate\\r\\n    ) public view returns (OwnersRecord[] memory) {\\r\\n        require(\\r\\n            vehicles[licensePlate].owner != address(0),\\r\\n            \\\"Vehicle not found\\\"\\r\\n        );\\r\\n\\r\\n        return ownersRecords[licensePlate];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x840616ff5bb382e92f83ae501d49afaeeaebdd48caa468a48c79e544abd2ad95\",\"license\":\"GNU\"},\"contracts/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: GNU\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n/**\\r\\n * A contract to manage contract ownership and safe mode\\r\\n * @title Owned\\r\\n * @author Nicolas Guarini, Lorenzo Ficazzola\\r\\n */\\r\\ncontract Owned {\\r\\n    /**\\r\\n     * @dev Define variables to keep track of deployers and safe mode\\r\\n     */\\r\\n    address internal deployer; // TODO: implement managing a group of deployers\\r\\n    bool internal safeMode;\\r\\n\\r\\n    /**\\r\\n     * @dev Define modifier for giving permission only to the deployers of the contract\\r\\n     */\\r\\n    modifier onlyDeployer() {\\r\\n        require(msg.sender == deployer);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initialize the contract's variables\\r\\n     */\\r\\n    constructor() {\\r\\n        deployer = msg.sender;\\r\\n        safeMode = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to transfer contract ownership to another address\\r\\n     * @param newDeployer The new deployer of the contract\\r\\n     */\\r\\n    function transferDeployer(address newDeployer) public onlyDeployer {\\r\\n        deployer = newDeployer;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to change the state of the safe mode\\r\\n     * @param newState The new state of the safe mode\\r\\n     */\\r\\n    function setSafeMode(bool newState) public onlyDeployer {\\r\\n        safeMode = newState;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Function to get the deployer of the contract\\r\\n     * @return The address of the deployer of the contract\\r\\n     */\\r\\n    function getDeployer() public view onlyDeployer returns (address) {\\r\\n        return deployer;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4a7596730182ca9052717609da092fe373550be7291e97700c437170173abb5d\",\"license\":\"GNU\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff021916908315150217905550611bf78061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063d8f9d14411610066578063d8f9d1441461010a578063dbe9061714610126578063dd614f7514610156578063e3303ad114610186578063f711d2fb146101b657610093565b806344b7e5f21461009857806372630531146100b4578063c71290cb146100d2578063ca902299146100ee575b600080fd5b6100b260048036038101906100ad9190610fa9565b6101d2565b005b6100bc610247565b6040516100c99190611017565b60405180910390f35b6100ec60048036038101906100e791906111ae565b6102c8565b005b610108600480360381019061010391906111ae565b6105bc565b005b610124600480360381019061011f9190611236565b6107ba565b005b610140600480360381019061013b9190611292565b6109e3565b60405161014d91906113c8565b60405180910390f35b610170600480360381019061016b9190611292565b610b24565b60405161017d91906114c8565b60405180910390f35b6101a0600480360381019061019b9190611292565b610cfe565b6040516101ad91906115c8565b60405180910390f35b6101d060048036038101906101cb91906115ea565b610e8b565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022a57600080fd5b80600060146101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a257600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516102f09190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f906116c7565b60405180910390fd5b600060149054906101000a900460ff16156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90611759565b60405180910390fd5b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152506001836040516104099190611653565b9081526020016040518091039020600082015181600001908161042c9190611985565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506002826040516104919190611653565b90815260200160405180910390206040518060400160405280838152602001428152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550506003826040516105039190611653565b908152602001604051809103902060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b3373ffffffffffffffffffffffffffffffffffffffff166001836040516105e39190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290611aa3565b60405180910390fd5b60018260405161067b9190611653565b90815260200160405180910390206002015481116106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611b35565b60405180910390fd5b600060149054906101000a900460ff161561071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611759565b60405180910390fd5b8060018360405161072f9190611653565b9081526020016040518091039020600201819055506002826040516107549190611653565b90815260200160405180910390206040518060400160405280838152602001428152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550505050565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516107e29190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611ba1565b60405180910390fd5b600060149054906101000a900460ff16156108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190611759565b60405180910390fd5b806001836040516108cb9190611653565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038260405161092a9190611653565b908152602001604051809103902060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6060600073ffffffffffffffffffffffffffffffffffffffff16600183604051610a0d9190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611ba1565b60405180910390fd5b600282604051610aa59190611653565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610b1957838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610ad3565b505050509050919050565b610b2c610f26565b600073ffffffffffffffffffffffffffffffffffffffff16600183604051610b549190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd390611ba1565b60405180910390fd5b600182604051610bec9190611653565b9081526020016040518091039020604051806060016040529081600082018054610c15906117a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610c41906117a8565b8015610c8e5780601f10610c6357610100808354040283529160200191610c8e565b820191906000526020600020905b815481529060010190602001808311610c7157829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509050919050565b6060600073ffffffffffffffffffffffffffffffffffffffff16600183604051610d289190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610db0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da790611ba1565b60405180910390fd5b600382604051610dc09190611653565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610e8057838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610dee565b505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee357600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b610f8681610f71565b8114610f9157600080fd5b50565b600081359050610fa381610f7d565b92915050565b600060208284031215610fbf57610fbe610f67565b5b6000610fcd84828501610f94565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100182610fd6565b9050919050565b61101181610ff6565b82525050565b600060208201905061102c6000830184611008565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110858261103c565b810181811067ffffffffffffffff821117156110a4576110a361104d565b5b80604052505050565b60006110b7610f5d565b90506110c3828261107c565b919050565b600067ffffffffffffffff8211156110e3576110e261104d565b5b6110ec8261103c565b9050602081019050919050565b82818337600083830152505050565b600061111b611116846110c8565b6110ad565b90508281526020810184848401111561113757611136611037565b5b6111428482856110f9565b509392505050565b600082601f83011261115f5761115e611032565b5b813561116f848260208601611108565b91505092915050565b6000819050919050565b61118b81611178565b811461119657600080fd5b50565b6000813590506111a881611182565b92915050565b600080604083850312156111c5576111c4610f67565b5b600083013567ffffffffffffffff8111156111e3576111e2610f6c565b5b6111ef8582860161114a565b925050602061120085828601611199565b9150509250929050565b61121381610ff6565b811461121e57600080fd5b50565b6000813590506112308161120a565b92915050565b6000806040838503121561124d5761124c610f67565b5b600083013567ffffffffffffffff81111561126b5761126a610f6c565b5b6112778582860161114a565b925050602061128885828601611221565b9150509250929050565b6000602082840312156112a8576112a7610f67565b5b600082013567ffffffffffffffff8111156112c6576112c5610f6c565b5b6112d28482850161114a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61131081611178565b82525050565b60408201600082015161132c6000850182611307565b50602082015161133f6020850182611307565b50505050565b60006113518383611316565b60408301905092915050565b6000602082019050919050565b6000611375826112db565b61137f81856112e6565b935061138a836112f7565b8060005b838110156113bb5781516113a28882611345565b97506113ad8361135d565b92505060018101905061138e565b5085935050505092915050565b600060208201905081810360008301526113e2818461136a565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611424578082015181840152602081019050611409565b60008484015250505050565b600061143b826113ea565b61144581856113f5565b9350611455818560208601611406565b61145e8161103c565b840191505092915050565b61147281610ff6565b82525050565b600060608301600083015184820360008601526114958282611430565b91505060208301516114aa6020860182611469565b5060408301516114bd6040860182611307565b508091505092915050565b600060208201905081810360008301526114e28184611478565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60408201600082015161152c6000850182611469565b50602082015161153f6020850182611307565b50505050565b60006115518383611516565b60408301905092915050565b6000602082019050919050565b6000611575826114ea565b61157f81856114f5565b935061158a83611506565b8060005b838110156115bb5781516115a28882611545565b97506115ad8361155d565b92505060018101905061158e565b5085935050505092915050565b600060208201905081810360008301526115e2818461156a565b905092915050565b600060208284031215611600576115ff610f67565b5b600061160e84828501611221565b91505092915050565b600081905092915050565b600061162d826113ea565b6116378185611617565b9350611647818560208601611406565b80840191505092915050565b600061165f8284611622565b915081905092915050565b600082825260208201905092915050565b7f56656869636c6520616c72656164792065786973747300000000000000000000600082015250565b60006116b160168361166a565b91506116bc8261167b565b602082019050919050565b600060208201905081810360008301526116e0816116a4565b9050919050565b7f436f6e747261637420697320696e20726561642d6f6e6c79206d6f646520666f60008201527f7220736563757269747920726561736f6e732e00000000000000000000000000602082015250565b600061174360338361166a565b915061174e826116e7565b604082019050919050565b6000602082019050818103600083015261177281611736565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117c057607f821691505b6020821081036117d3576117d2611779565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261183b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117fe565b61184586836117fe565b95508019841693508086168417925050509392505050565b6000819050919050565b600061188261187d61187884611178565b61185d565b611178565b9050919050565b6000819050919050565b61189c83611867565b6118b06118a882611889565b84845461180b565b825550505050565b600090565b6118c56118b8565b6118d0818484611893565b505050565b5b818110156118f4576118e96000826118bd565b6001810190506118d6565b5050565b601f8211156119395761190a816117d9565b611913846117ee565b81016020851015611922578190505b61193661192e856117ee565b8301826118d5565b50505b505050565b600082821c905092915050565b600061195c6000198460080261193e565b1980831691505092915050565b6000611975838361194b565b9150826002028217905092915050565b61198e826113ea565b67ffffffffffffffff8111156119a7576119a661104d565b5b6119b182546117a8565b6119bc8282856118f8565b600060209050601f8311600181146119ef57600084156119dd578287015190505b6119e78582611969565b865550611a4f565b601f1984166119fd866117d9565b60005b82811015611a2557848901518255600182019150602085019450602081019050611a00565b86831015611a425784890151611a3e601f89168261194b565b8355505b6001600288020188555050505b505050505050565b7f596f7520646f206e6f74206f776e20746869732076656869636c650000000000600082015250565b6000611a8d601b8361166a565b9150611a9882611a57565b602082019050919050565b60006020820190508181036000830152611abc81611a80565b9050919050565b7f4e6577206d696c65616765206d7573742062652067726561746572207468616e60008201527f2063757272656e74206d696c6561676500000000000000000000000000000000602082015250565b6000611b1f60308361166a565b9150611b2a82611ac3565b604082019050919050565b60006020820190508181036000830152611b4e81611b12565b9050919050565b7f56656869636c65206e6f7420666f756e64000000000000000000000000000000600082015250565b6000611b8b60118361166a565b9150611b9682611b55565b602082019050919050565b60006020820190508181036000830152611bba81611b7e565b905091905056fea2646970667358221220b144f9c135b2df6120773f9d9619496f4d9be9046b397a27a72bf626d0fdd57464736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063d8f9d14411610066578063d8f9d1441461010a578063dbe9061714610126578063dd614f7514610156578063e3303ad114610186578063f711d2fb146101b657610093565b806344b7e5f21461009857806372630531146100b4578063c71290cb146100d2578063ca902299146100ee575b600080fd5b6100b260048036038101906100ad9190610fa9565b6101d2565b005b6100bc610247565b6040516100c99190611017565b60405180910390f35b6100ec60048036038101906100e791906111ae565b6102c8565b005b610108600480360381019061010391906111ae565b6105bc565b005b610124600480360381019061011f9190611236565b6107ba565b005b610140600480360381019061013b9190611292565b6109e3565b60405161014d91906113c8565b60405180910390f35b610170600480360381019061016b9190611292565b610b24565b60405161017d91906114c8565b60405180910390f35b6101a0600480360381019061019b9190611292565b610cfe565b6040516101ad91906115c8565b60405180910390f35b6101d060048036038101906101cb91906115ea565b610e8b565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022a57600080fd5b80600060146101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a257600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516102f09190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f906116c7565b60405180910390fd5b600060149054906101000a900460ff16156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90611759565b60405180910390fd5b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152506001836040516104099190611653565b9081526020016040518091039020600082015181600001908161042c9190611985565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506002826040516104919190611653565b90815260200160405180910390206040518060400160405280838152602001428152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550506003826040516105039190611653565b908152602001604051809103902060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b3373ffffffffffffffffffffffffffffffffffffffff166001836040516105e39190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290611aa3565b60405180910390fd5b60018260405161067b9190611653565b90815260200160405180910390206002015481116106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611b35565b60405180910390fd5b600060149054906101000a900460ff161561071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611759565b60405180910390fd5b8060018360405161072f9190611653565b9081526020016040518091039020600201819055506002826040516107549190611653565b90815260200160405180910390206040518060400160405280838152602001428152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550505050565b600073ffffffffffffffffffffffffffffffffffffffff166001836040516107e29190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611ba1565b60405180910390fd5b600060149054906101000a900460ff16156108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190611759565b60405180910390fd5b806001836040516108cb9190611653565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038260405161092a9190611653565b908152602001604051809103902060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6060600073ffffffffffffffffffffffffffffffffffffffff16600183604051610a0d9190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611ba1565b60405180910390fd5b600282604051610aa59190611653565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610b1957838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610ad3565b505050509050919050565b610b2c610f26565b600073ffffffffffffffffffffffffffffffffffffffff16600183604051610b549190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd390611ba1565b60405180910390fd5b600182604051610bec9190611653565b9081526020016040518091039020604051806060016040529081600082018054610c15906117a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610c41906117a8565b8015610c8e5780601f10610c6357610100808354040283529160200191610c8e565b820191906000526020600020905b815481529060010190602001808311610c7157829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509050919050565b6060600073ffffffffffffffffffffffffffffffffffffffff16600183604051610d289190611653565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610db0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da790611ba1565b60405180910390fd5b600382604051610dc09190611653565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610e8057838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610dee565b505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee357600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b610f8681610f71565b8114610f9157600080fd5b50565b600081359050610fa381610f7d565b92915050565b600060208284031215610fbf57610fbe610f67565b5b6000610fcd84828501610f94565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100182610fd6565b9050919050565b61101181610ff6565b82525050565b600060208201905061102c6000830184611008565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110858261103c565b810181811067ffffffffffffffff821117156110a4576110a361104d565b5b80604052505050565b60006110b7610f5d565b90506110c3828261107c565b919050565b600067ffffffffffffffff8211156110e3576110e261104d565b5b6110ec8261103c565b9050602081019050919050565b82818337600083830152505050565b600061111b611116846110c8565b6110ad565b90508281526020810184848401111561113757611136611037565b5b6111428482856110f9565b509392505050565b600082601f83011261115f5761115e611032565b5b813561116f848260208601611108565b91505092915050565b6000819050919050565b61118b81611178565b811461119657600080fd5b50565b6000813590506111a881611182565b92915050565b600080604083850312156111c5576111c4610f67565b5b600083013567ffffffffffffffff8111156111e3576111e2610f6c565b5b6111ef8582860161114a565b925050602061120085828601611199565b9150509250929050565b61121381610ff6565b811461121e57600080fd5b50565b6000813590506112308161120a565b92915050565b6000806040838503121561124d5761124c610f67565b5b600083013567ffffffffffffffff81111561126b5761126a610f6c565b5b6112778582860161114a565b925050602061128885828601611221565b9150509250929050565b6000602082840312156112a8576112a7610f67565b5b600082013567ffffffffffffffff8111156112c6576112c5610f6c565b5b6112d28482850161114a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61131081611178565b82525050565b60408201600082015161132c6000850182611307565b50602082015161133f6020850182611307565b50505050565b60006113518383611316565b60408301905092915050565b6000602082019050919050565b6000611375826112db565b61137f81856112e6565b935061138a836112f7565b8060005b838110156113bb5781516113a28882611345565b97506113ad8361135d565b92505060018101905061138e565b5085935050505092915050565b600060208201905081810360008301526113e2818461136a565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611424578082015181840152602081019050611409565b60008484015250505050565b600061143b826113ea565b61144581856113f5565b9350611455818560208601611406565b61145e8161103c565b840191505092915050565b61147281610ff6565b82525050565b600060608301600083015184820360008601526114958282611430565b91505060208301516114aa6020860182611469565b5060408301516114bd6040860182611307565b508091505092915050565b600060208201905081810360008301526114e28184611478565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60408201600082015161152c6000850182611469565b50602082015161153f6020850182611307565b50505050565b60006115518383611516565b60408301905092915050565b6000602082019050919050565b6000611575826114ea565b61157f81856114f5565b935061158a83611506565b8060005b838110156115bb5781516115a28882611545565b97506115ad8361155d565b92505060018101905061158e565b5085935050505092915050565b600060208201905081810360008301526115e2818461156a565b905092915050565b600060208284031215611600576115ff610f67565b5b600061160e84828501611221565b91505092915050565b600081905092915050565b600061162d826113ea565b6116378185611617565b9350611647818560208601611406565b80840191505092915050565b600061165f8284611622565b915081905092915050565b600082825260208201905092915050565b7f56656869636c6520616c72656164792065786973747300000000000000000000600082015250565b60006116b160168361166a565b91506116bc8261167b565b602082019050919050565b600060208201905081810360008301526116e0816116a4565b9050919050565b7f436f6e747261637420697320696e20726561642d6f6e6c79206d6f646520666f60008201527f7220736563757269747920726561736f6e732e00000000000000000000000000602082015250565b600061174360338361166a565b915061174e826116e7565b604082019050919050565b6000602082019050818103600083015261177281611736565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117c057607f821691505b6020821081036117d3576117d2611779565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261183b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117fe565b61184586836117fe565b95508019841693508086168417925050509392505050565b6000819050919050565b600061188261187d61187884611178565b61185d565b611178565b9050919050565b6000819050919050565b61189c83611867565b6118b06118a882611889565b84845461180b565b825550505050565b600090565b6118c56118b8565b6118d0818484611893565b505050565b5b818110156118f4576118e96000826118bd565b6001810190506118d6565b5050565b601f8211156119395761190a816117d9565b611913846117ee565b81016020851015611922578190505b61193661192e856117ee565b8301826118d5565b50505b505050565b600082821c905092915050565b600061195c6000198460080261193e565b1980831691505092915050565b6000611975838361194b565b9150826002028217905092915050565b61198e826113ea565b67ffffffffffffffff8111156119a7576119a661104d565b5b6119b182546117a8565b6119bc8282856118f8565b600060209050601f8311600181146119ef57600084156119dd578287015190505b6119e78582611969565b865550611a4f565b601f1984166119fd866117d9565b60005b82811015611a2557848901518255600182019150602085019450602081019050611a00565b86831015611a425784890151611a3e601f89168261194b565b8355505b6001600288020188555050505b505050505050565b7f596f7520646f206e6f74206f776e20746869732076656869636c650000000000600082015250565b6000611a8d601b8361166a565b9150611a9882611a57565b602082019050919050565b60006020820190508181036000830152611abc81611a80565b9050919050565b7f4e6577206d696c65616765206d7573742062652067726561746572207468616e60008201527f2063757272656e74206d696c6561676500000000000000000000000000000000602082015250565b6000611b1f60308361166a565b9150611b2a82611ac3565b604082019050919050565b60006020820190508181036000830152611b4e81611b12565b9050919050565b7f56656869636c65206e6f7420666f756e64000000000000000000000000000000600082015250565b6000611b8b60118361166a565b9150611b9682611b55565b602082019050919050565b60006020820190508181036000830152611bba81611b7e565b905091905056fea2646970667358221220b144f9c135b2df6120773f9d9619496f4d9be9046b397a27a72bf626d0fdd57464736f6c63430008120033",
  "devdoc": {
    "author": "Nicolas Guarini, Lorenzo Ficazzola",
    "kind": "dev",
    "methods": {
      "addVehicle(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The initial mileage of the vehicle"
        }
      },
      "changeOwner(string,address)": {
        "params": {
          "licensePlate": "The licence plate of the veichle",
          "newOwner": "The new owner of the vehicle"
        }
      },
      "getDeployer()": {
        "returns": {
          "_0": "The address of the deployer of the contract"
        }
      },
      "getMileageRecord(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The mileage records of a vehicle"
        }
      },
      "getOwnersRecords(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The owners records of the vehicle"
        }
      },
      "getVehicleByLicencePlate(string)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle"
        },
        "returns": {
          "_0": "The searched vehicle struct"
        }
      },
      "setSafeMode(bool)": {
        "params": {
          "newState": "The new state of the safe mode"
        }
      },
      "transferDeployer(address)": {
        "params": {
          "newDeployer": "The new deployer of the contract"
        }
      },
      "updateMileage(string,uint256)": {
        "params": {
          "licensePlate": "The licence plate of the vehicle",
          "mileage": "The new mileage of the vehicle"
        }
      }
    },
    "stateVariables": {
      "vehicles": {
        "details": "Define mappings to keep track of vehicles, their mileage records, and owners."
      }
    },
    "title": "MileChain",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addVehicle(string,uint256)": {
        "notice": "Function to add a new vehicle"
      },
      "changeOwner(string,address)": {
        "notice": "Function to change the owner of a vehicle"
      },
      "getDeployer()": {
        "notice": "Function to get the deployer of the contract"
      },
      "getMileageRecord(string)": {
        "notice": "Function to get the mileage records of a vehicle"
      },
      "getOwnersRecords(string)": {
        "notice": "Function to get the owners records of a vehicle"
      },
      "getVehicleByLicencePlate(string)": {
        "notice": "Function to get the owner and the latest mileage of a vehicle"
      },
      "setSafeMode(bool)": {
        "notice": "Function to change the state of the safe mode"
      },
      "transferDeployer(address)": {
        "notice": "Function to transfer contract ownership to another address"
      },
      "updateMileage(string,uint256)": {
        "notice": "Function to update the mileage of the vehicle"
      }
    },
    "notice": "A contract for keeping track of mileage records for vehicles.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 292,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "deployer",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 294,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "safeMode",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 28,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "vehicles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Vehicle)12_storage)"
      },
      {
        "astId": 34,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "mileageRecords",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(MileageRecord)17_storage)dyn_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/MileChain.sol:MileChain",
        "label": "ownersRecords",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(OwnersRecord)22_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(MileageRecord)17_storage)dyn_storage": {
        "base": "t_struct(MileageRecord)17_storage",
        "encoding": "dynamic_array",
        "label": "struct MileChain.MileageRecord[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(OwnersRecord)22_storage)dyn_storage": {
        "base": "t_struct(OwnersRecord)22_storage",
        "encoding": "dynamic_array",
        "label": "struct MileChain.OwnersRecord[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(MileageRecord)17_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.MileageRecord[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(MileageRecord)17_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(OwnersRecord)22_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.OwnersRecord[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(OwnersRecord)22_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Vehicle)12_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct MileChain.Vehicle)",
        "numberOfBytes": "32",
        "value": "t_struct(Vehicle)12_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(MileageRecord)17_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.MileageRecord",
        "members": [
          {
            "astId": 14,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "mileage",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 16,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(OwnersRecord)22_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.OwnersRecord",
        "members": [
          {
            "astId": 19,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 21,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Vehicle)12_storage": {
        "encoding": "inplace",
        "label": "struct MileChain.Vehicle",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "licensePlate",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 11,
            "contract": "contracts/MileChain.sol:MileChain",
            "label": "mileage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}